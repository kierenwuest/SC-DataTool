Enum Account.s_c__Location_Address_Source__c_picklist {
    "Billing Address"
    "Shipping Address"
}
Enum Account.s_c__Tax_Entity_Code__c_picklist {
    "a"
    "b"
    "c"
    "d"
    "e"
    "f"
    "g"
    "h"
    "i"
    "j"
    "k"
    "l"
    "m"
    "n"
    "p"
    "q"
    "r"
    "taxable"
}

Table Standard.Account {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: '[Future Use] If enabled this Account and all its related Contacts can purchase from all stores']
  s_c__Brand__c boolean [not null, note: 'If enabled, indicates this Account is a brand of products in your store. This should be enabled to allow products to lookup this account as its Brand']
  s_c__Credit_Hold__c boolean [not null, note: 'If enabled, this Account and all its related Contacts will not be able to use a Pay By Account Payment_Provider__c']
  s_c__Display_Name__c string [note: 'The preferred brand name to show on the website. If empty, Name will be shown instead']
  s_c__Is_Business__c boolean [not null, note: 'Indicates whether this Account represents a Business']
  s_c__Is_Location__c boolean [not null, note: 'Determines whether an Account is being used as a Location. Does not affect anything else, but will only be considered a Location when this is checked.']
  s_c__Location_Address_Source__c Account.s_c__Location_Address_Source__c_picklist [note: 'Determines which address to use for this Location: Billing, Shipping, or neither.']
  s_c__Location_City__c string [note: 'Defines the City component of this Locations Address.']
  s_c__Location_Country__c string [note: 'Defines the Country component of this Locations Address.']
  s_c__Location_Display_Name__c string [note: 'The name to show on the Store for this Location. If blank, Name will be used instead.']
  s_c__Location_Email__c email [note: 'This Locations email address.']
  s_c__Location_Info_Markdown__c textarea [note: 'Use Markdown to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Location_Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the page']
  s_c__Location_Meta_Keywords__c string [note: 'Comma separated list of keywords to appear within the meta keywords tag in the HEAD tag of the page']
  s_c__Location_Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the page']
  s_c__Location_Path__c string [unique, note: 'The path at which this Location Group can be found.']
  s_c__Location_Phone__c phone [note: 'This Locations phone number.']
  s_c__Location_Postal_Code__c string [note: 'Defines the Postal Code component of this Locations Address.']
  s_c__Location_Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Location is shared on Social Media. If not provided, will use the Locations Logo']
  s_c__Location_State__c string [note: 'Defines the State component of this Locations Address.']
  s_c__Location_Street__c string [note: 'Defines the Street component of this Locations Address.']
  s_c__Location_Website__c url [note: 'This Locations website address.']
  s_c__Location__Latitude__s double 
  s_c__Location__Longitude__s double 
  s_c__Location__c location [note: 'Defines the latitude and longitude of this Location.']
  s_c__Logo_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'Image to use when showing this account as a Brand in your store']
  s_c__Membership_Id__c integer [ref: > StoreConnect.s_c__Membership__c.Id, note: 'Membership that this Account belongs to. Can be used to give special pricing or access to restricted pages and articles']
  s_c__Pay_By_Account__c boolean [not null, note: 'If enabled, this Account has the ability to use a Pay By Account Payment_Provider__c, provided Credit_Hold__c is false']
  s_c__Pricebook_Id__c integer [ref: > Standard.Pricebook2.Id, note: 'A specific Pricebook to be used by this Account. Only the Products contained in this Pricebook will be available for the account to purchase once logged in.']
  s_c__Subdomain__c string [unique, note: 'A subdomain prepended to the current Store__c.Domain__c (e.g. vipuser.example.com) that allows users to access the store via a subdomain']
  s_c__Supplier_Notes__c textarea [note: 'Holds any notes if this Contact is a supplier. This data is only used in POS and not exposed to customers']
  s_c__Supplier__c boolean [not null, note: 'If enabled, indicates this Account is a supplier of products in your store']
  s_c__Tax_Entity_Code__c Account.s_c__Tax_Entity_Code__c_picklist [note: 'Identifies the tax exemption status to be applied to the orders']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Account_Points_Balance__c double 
  s_c__Account_Credit_Balance__c currency 
}



Table Standard.Asset {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  IsCompetitorProduct boolean [not null]
  Name string [not null]
  IsInternal boolean [not null]
  s_c__Order_Line_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: '[Future Use] The OrderItem that this Asset was sold with']
  s_c__Stock_Level_Id__c integer [ref: > StoreConnect.s_c__Stock_Level__c.Id, note: '[Future Use] The Stock_Level__c from which this Asset is shipped']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table Standard.CampaignMember {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  CampaignId string(18) [ref: > Standard.Campaign.Id, not null]
  ContactId string(18) [ref: > Standard.Contact.Id]
  LeadId string(18) [ref: > Standard.Lead.Id]
  HasResponded boolean [not null]
  DoNotCall boolean [not null]
  HasOptedOutOfEmail boolean [not null]
  HasOptedOutOfFax boolean [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table Standard.Campaign {
  Note {
'''
  For Reference completion only
'''
  }
  Id id [not null]
}

Table Standard.Contact {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  Account id [not null, ref: > Standard.Account.Id, note: 'manually added']
  LastName string [not null]
  Name string [not null]
  IsEmailBounced boolean [not null]
  IsPriorityRecord boolean [not null]
  s_c__Can_Purchase_For_Account__c boolean [not null, note: 'If enabled, this Contact is able to use a Pay By Account Payment_Provider__c (Requires this Contacts Account.Pay_By_Account__c to also be enabled)']
  s_c__Can_Use_Account_Credit__c boolean [not null, note: 'Specify whether the Contact is permitted to use any Account Credit for this Account']
  s_c__Can_Use_Account_Points__c boolean [not null, note: 'Specify whether the Contact is permitted to use any Account Credit belonging to this Account']
  s_c__Can_Use_Account_Pricing__c boolean [not null, note: 'If enabled, this Contact is able to use its Accounts Pricebook']
  s_c__Confirmation_URL__c string [note: 'The URL that is emailed to this Contact for them to confirm their login on the store (if required)']
  s_c__Invitation_URL__c string [note: 'The URL that is emailed to this Contact for them to accept their invitation on the store (if required)']
  s_c__Last_Login_Date__c datetime [note: 'The date/time this customer last logged in']
  s_c__Reset_Password_URL__c string [note: 'The URL that is emailed to this Contact for them to reset their password (if required)']
  s_c__Reset_Password__c boolean [not null, note: 'If enabled, a reset password email will be sent using the link from Reset_Password_URL__c']
  s_c__SSO_Provider__c string [note: 'The name of the OAuth provider used by this Contact to log in.     This is intended to be set by the system outside of Salesforce.']
  s_c__SSO_Uid__c string [unique, note: 'The unique ID used by the identity provider for Single Sign-On.     This is intended to be set by the system outside of Salesforce.']
  s_c__Send_Confirmation__c boolean [not null, note: 'If enabled, a confirm login email will be sent using the link from Confirmation_URL__c']
  s_c__Send_Invitation__c boolean [not null, note: 'If enabled, an invitation email will be sent using the link from Invitation_URL__c']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The Store__c the customer has interacted with most recently (e.g. logged in, or purchased from)']
  s_c__Terms_Accepted_On__c datetime [note: 'The most recent date this Contact accepted the terms and conditions']
  s_c__Username__c string [note: 'The username this Contact uses to sign into the store, by default this is the email address']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__First_Name__c string [note: 'Corresponds with standard field FirstName, primarily for use with VF email templates']
}


Enum Lead.Status_picklist {
    "New"
    "Contacted"
    "Nurturing"
    "Qualified"
    "Unqualified"
}
Enum Lead.s_c__Preferred_Contact_Method__c_picklist {
    "phone"
    "email"
}

Table Standard.Lead {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  LastName string [not null]
  Name string [not null]
  Company string [not null]
  Status Lead.Status_picklist [not null]
  IsConverted boolean [not null]
  IsUnreadByOwner boolean [not null]
  IsPriorityRecord boolean [not null]
  s_c__Convert_Trggr_Acct_Id__c integer [ref: > Standard.Account.Id, note: '[Internal Use] Triggers a Lead to Contact conversion']
  s_c__Preferred_Contact_Method__c Lead.s_c__Preferred_Contact_Method__c_picklist [note: 'This Leads preferred method of contact']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum Order.Status_picklist {
    "Draft"
    "Backorder"
    "Verified"
    "Picked"
    "Shipped"
    "Fulfilled"
    "Cancelled"
}
Enum Order.StatusCode_picklist {
    "Draft"
    "Activated"
    "Canceled"
    "Expired"
}

Table Standard.Order {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  EffectiveDate date [not null]
  IsReductionOrder boolean [not null]
  Status Order.Status_picklist [not null]
  StatusCode Order.StatusCode_picklist [not null]
  OrderNumber string [not null]
  TotalAmount currency [not null]
  s_c__Abandoned__c boolean [not null, note: 'This field is set to true by StoreConnect if the order has been abandoned, defined as not complete on all steps to pay and more than 10 hours have passed.']
  s_c__Assisted_By_User_Id__c integer [ref: > Standard.User.Id, note: 'The user that was selected during the checkout process as assisting on this order.']
  s_c__Browser__c string [note: 'This is the browser used by the customer']
  s_c__Checkout_Email__c email [note: 'Email added by the user at the point of checkout. In order transactional emails, this email is used. If empty, contact email is used']
  s_c__Checkout_Phone__c phone [note: 'Phone added by the user at the point of checkout']
  s_c__Checkout_Shipping_Email__c email [note: 'Shipping Email (of recipient) added by user at the point of checkout. Sometimes this is different from ShipToContacts email.']
  s_c__Checkout_Shipping_Phone__c phone [note: 'Phone number (of recipient) added by user at the point of checkout. Sometimes this is different from ShipToContacts phone.']
  s_c__Checkout_Step__c string [note: 'This is the step of the checkout that this order has achieved. Each step indicates where the order is up to.']
  s_c__Collection_Point_Id__c integer [ref: > StoreConnect.s_c__Collection_Point__c.Id, note: 'Where the user picked up this order if it was via a click and collect location.']
  s_c__Collection_Time__c datetime [note: 'The time the customer requested to pickup the item during checkout']
  s_c__Contact_Email__c string [note: 'The bill to contact email used for this order.']
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id, note: 'The Contact assigned that made this order']
  s_c__Contact_Mobile_Phone__c string [note: 'The bill to contact mobile phone used for this order.']
  s_c__Contact_Phone__c string [note: 'The bill to contact phone used for this order.']
  s_c__Country__c string [note: 'This is the country of the customer']
  s_c__Customer_Notes_Long__c textarea [note: 'Holds any notes supplied by the customer during checkout on the payment page of the checkout process.']
  s_c__Customer_Notes__c string [note: '[DEPRECATED] Use Customer_Notes_Long__c instead']
  s_c__Device_Type__c string [note: 'This is the device type used by the customer']
  s_c__Ip_Address__c string [note: 'This is the IP Address of the customer']
  s_c__Language__c string [note: 'This is the the system language of the customer']
  s_c__Location__Latitude__s double 
  s_c__Location__Longitude__s double 
  s_c__Location__c location [note: 'This is the latitude and longitude of the customer']
  s_c__POS_Order_Type__c string [note: 'The type of this Order, for example Layby']
  s_c__Platform__c string [note: 'This is the computer platform of the customer']
  s_c__Register_Shift_Id__c integer [ref: > StoreConnect.s_c__Register_Shift__c.Id, note: 'The Register Shift that created this Order (if applicable)']
  s_c__Screen_Resolution__c string [note: 'This is the screen resolution of the computer used by the customer']
  s_c__Send_Confirmation__c boolean [not null, note: 'Send emails to the contact about this order as defined by the stores Transactional Emails configuration.']
  s_c__Send_POS_Email__c boolean [not null, note: 'Send POS receipt email to the checkout email address as defined by the stores Transactional Emails configuration.']
  s_c__Shipping_Cost__c currency [note: '[DEPRECATED]']
  s_c__Shipping_Method__c string [note: 'The shipping method selected by the customer during checkout.']
  s_c__Shipping_Notes__c textarea [note: 'Holds any shipping notes supplied by the customer during checkout']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The web store that this order was created on.']
  s_c__Submitted_Date__c datetime [note: 'Contains the date when the order is created']
  s_c__Subscription_Order_Id__c integer [ref: > Standard.Order.Id, note: 'The original Order that is the source of this Order']
  s_c__Test_Order__c boolean [not null, note: 'This order was placed as a Test Order']
  s_c__Total_Earn_Points_Amount__c double [note: 'The total number of points earned with this Order']
  s_c__Total_Points_Amount__c double [note: 'The total number of points used for purchasing this Order']
  s_c__Total_Tax_Amount__c currency [note: 'This is the Total tax calculated for this Order']
  s_c__Total_Taxes__c double [note: '[Deprecated] Use Total_Tax_Amount__c instead']
  s_c__User_Agent__c string [note: 'This is the customers browser user agent string']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Payment_Link__c string 
  s_c__Cart_Reference__c textarea [note: 'Used to link a web store Checkout session to its resulting Order']
}


Enum OrderItem.s_c__Delivery_Day__c_picklist {
    "monday"
    "tuesday"
    "wednesday"
    "thursday"
    "friday"
    "saturday"
    "sunday"
}

Table Standard.OrderItem {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  OrderId integer [ref: > Standard.Order.Id, not null]
  PricebookEntryId integer [ref: > Standard.PricebookEntry.Id, not null]
  Quantity double [not null]
  OrderItemNumber string [not null]
  s_c__Deposit_Amount__c currency [note: 'The deposit charged during checkout (if any)']
  s_c__Deposit_Points__c double [note: 'The deposit points amount charged during checkout (if any)']
  s_c__Earn_Points_Amount__c double [note: 'The number of points earned per quantity with this Order Item']
  s_c__Points_Amount__c double [note: 'The number of points used per quantity for purchasing this Order Item']
  s_c__Price_Manually_Updated__c boolean [not null, note: 'For System/Internal use only.         Used in conjuntion with tax calculator and for product prices WITHOUT tax to avoid deducting the existing UnitPrice tax from the UnitPrice and simply amend the new calculated to the Unit Price.         Via OrderItem trigger this is set to true if its a product price without tax and either UnitPrice or Quantity has changed. See OrderItemHelper.clearTaxAmount for further details.']
  s_c__Shipment_Id__c integer [ref: > StoreConnect.s_c__Shipment__c.Id, note: 'Shipment this OrderItem is part of']
  s_c__Stock_Level_Id__c integer [ref: > StoreConnect.s_c__Stock_Level__c.Id, note: 'StockLevel linked to this OrderItems product']
  s_c__Subscription_Id__c integer [ref: > StoreConnect.s_c__Subscription__c.Id, note: 'If the Order was created by a Subscription, this will be the Subscription for this OrderItem']
  s_c__Tax_Amount__c currency [note: 'This is the Total Tax calculated for this Order Item.']
  s_c__Tax__c double [note: '[Deprecated] Use Tax_Amount__c instead']
  s_c__Total_of_Discounts__c currency [note: 'This is the Total Discount calculated for this Order Item']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Is_List_Price_Tax_Inclusive__c boolean [not null]
  s_c__Is_Restricted_Product__c boolean [not null]
  s_c__Order_Checkout_Step__c string 
  s_c__Delivery_Day__c OrderItem.s_c__Delivery_Day__c_picklist [note: 'The selected delivery day of the week for this Order Item']
  s_c__Delivery_Start_Date__c date [note: 'The selected delivery start date for this Order Item']
  s_c__Delivery_Time__c string [note: 'The selected delivery time slot for this Order Item']
  s_c__Delivery_Window_Debug__c string [note: 'Debugging information for the corresponding delivery window of this Order Item']
  s_c__Delivery_Window_Id__c integer [ref: > StoreConnect.s_c__Delivery_Window__c.Id, note: 'The selected Delivery Window for this Order Item']
  s_c__Transaction_Discount__c double [note: 'The order-level discount that was applied to this OrderItem (if any)']
  s_c__Unit_Discount__c double [note: 'The unit-level discount that was applied to this OrderItem (if any)']
  Is_Page_Product__c boolean [not null]
}



Table Standard.Pricebook2 {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  Name string [not null]
  IsActive boolean [not null]
  IsArchived boolean [not null]
  IsStandard boolean [not null]
  s_c__Add_To_Cart_Text__c string [note: 'Text to be displayed on Add to Cart buttons for Products. Can be overridden for individual Products with PriceBookEntry.s_c__Add_To_Cart_Text__c. If blank, the text Add to Cart will be used']
  s_c__Buy_It_Now_Text__c string [note: 'Text to be displayed on Buy It Now buttons for Products. Can be overridden for individual Products with PriceBookEntry.s_c__Buy_It_Now_Text__c. If blank, the text Buy it Now will be used']
  s_c__Default_Earn_Rate__c double [note: 'The default conversion rate for earning points from purchases']
  s_c__Default_Purchase_Rate__c double [note: 'The default conversion rate for when purchasing using points']
  s_c__Hide_Price_Text__c string [note: 'Text to be displayed in place of the price on Products where PriceBookEntry.s_c__Hide_Price__c is enabled. Can be overridden for individual Products with PriceBookEntry.s_c__Hide_Price_Text__c. If blank "POA" will be used']
  s_c__Order_Quantity_Maximum__c double [note: 'The maximum quantity of any individual Product which can be added to a single Order. Products that track inventory will use either this or the current stock availability as the limit (whichever is lower). Can be overridden for individual Products with PriceBookEntry.s_c__Order_Quantity_Maximum__c. If left blank then stock availability is used as the limit (or no limit if the Product is backorderable)']
  s_c__Out_Of_Stock_Text__c string [note: 'Text to be displayed if the Product is out of stock (for Products that track stock). Can be overridden for individual Products with PriceBookEntry.s_c__Out_Of_Stock_Text__c. If blank Out of Stock will be shown']
  s_c__Unavailable_Text__c string [note: 'Text to be displayed in place of the price when a Product is not available to purchase (e.g. is discontinued). If blank, "Unavailable" will be shown']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum PricebookEntry.s_c__Variable_Pricing_Options__c_multipicklist {
    "100000"
    "1000000"
    "10000"
    "250000"
    "25000"
    "500000"
    "5000"
    "50000"
    "other"
}

Table Standard.PricebookEntry {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  Pricebook2Id integer [ref: > Standard.Pricebook2.Id, not null]
  Product2Id integer [ref: > Standard.Product2.Id, not null]
  UnitPrice currency [not null]
  IsActive boolean [not null]
  UseStandardPrice boolean [not null]
  IsArchived boolean [not null]
  s_c__Add_To_Cart_Text__c string [note: 'Text to be displayed on the Add to Cart buttons for the Product. If blank, the `Pricebook2.Add_To_Cart_Text__c` field will be used']
  s_c__Balloon_Price__c currency [note: 'If set this will be used as the amount that will be billed at the end of the subscription term.']
  s_c__Buy_It_Now_Text__c string [note: 'Text to be displayed on the Buy it Now buttons for the Product. If blank, the `Pricebook2.Buy_It_Now_Text__c` field will be used']
  s_c__Can_Earn_Points__c boolean [not null, note: 'If checked, customers can earn points by purchasing this product']
  s_c__Can_Purchase_With_Currency__c boolean [not null, note: 'If checked, customers can use currency to purchase this product']
  s_c__Can_Purchase_With_Points__c boolean [not null, note: 'If checked, customers can use points to purchase this product']
  s_c__Deposit_Amount__c currency [note: 'If set the user will be charged this amount as a deposit during checkout']
  s_c__Deposit_Points__c double [note: 'If set the user will be charged this amount of points as a deposit during checkout']
  s_c__Disable_Quantity_Selection__c boolean [not null, note: 'Prevents users from editing the quantity when purchasing this Product. If enabled, s_c__Order_Quantity_Maximum__c (either on this PriceBookEntry or its related PriceBook) must be set as it is used as the quantity when a customer purchases the Product']
  s_c__Display_If_Restricted__c boolean [not null]
  s_c__Earn_Points_Bonus__c double [note: 'The amount of bonus points earned by purchasing this product. Bonus points are earned on top of any other points earned, if any']
  s_c__Earn_Points__c double [note: 'The amount of points earned by purchasing this product. If blank and Can Earn Points is true, the Price Books Default Earn Rate will be used to calculate the number of points earned']
  s_c__Enable_Variable_Pricing__c boolean [not null, note: 'Allow the customer to choose how much they would like to pay (e.g. for donations). The minimum price allowed is the Price or s_c__Sale_Price__c']
  s_c__Hide_Price_Text__c string [note: 'Text to be displayed in place of the price for the Products when s_c__Hide_Price__c is true. If blank the `Pricebook2.Hide_Price_Text__c` field will be used']
  s_c__Hide_Price__c boolean [not null, note: 'If enabled the Product will show s_c__Hide_Price_Text__c in place of a price, for example to show "Price on Application"']
  s_c__Minimum_Sell_Price__c currency [note: 'If set this will be used as the minimum possible discounted price for this Product on StoreConnect POS. If blank the Product2.Minimum_Sell_Price field is used']
  s_c__Order_Quantity_Maximum__c double [note: 'The maximum quantity of any individual Product which can be added to a single Order. Products that track inventory will use either this or the current stock availability as the limit (whichever is lower). If blank the value in PriceBook.s_c__Order_Quantity_Maximum__c will be used']
  s_c__Out_Of_Stock_Text__c string [note: 'Text to be displayed if the Product is out of stock. If blank the Pricebook.s_c__Out_Of_Stock_Text__c field will be used']
  s_c__Percentage__c percent [note: 'The percentage value to add to an order total (after taxes and shipping) using this payment method.']
  s_c__Purchase_Points_Sale__c double [note: 'If set this will be used as the points price required to purchase this product']
  s_c__Purchase_Points__c double [note: 'The amount of points required to purchase this product. If blank and Can Purchase With Points is true, the Price Books Default Purchase Rate will be used to calculate the number of points required']
  s_c__Restricted_Text__c string 
  s_c__Restricted__c boolean [not null]
  s_c__Sale_Price__c currency [note: 'If set this will be used as the amount users will be charged for the Product. If blank the Price field is used']
  s_c__Setup_Price__c currency [note: 'If set this will be used as the amount that will be billed at the start of the subscription term.']
  s_c__Variable_Pricing_Options__c PricebookEntry.s_c__Variable_Pricing_Options__c_multipicklist [note: 'The allowed prices if s_c__Enable_Variable_Pricing__c is enabled. Selecting "Other" allows the user to enter any amount as long as its higher than Price. Custom names should be in cents (e.g. 5000 for $50)']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum Product2.s_c__Condition__c_picklist {
    "new"
    "refurbished"
    "used"
}
Enum Product2.s_c__Shipping_Dimensions_Unit__c_picklist {
    "millimetre"
    "centimetre"
    "metre"
    "kilometre"
    "inch"
    "foot"
    "yard"
    "mile"
}
Enum Product2.s_c__Shipping_Methods__c_multipicklist {
    "pick_up"
    "Regular Post"
    "Express Post"
    "International"
}
Enum Product2.s_c__Shipping_Packaging_Type__c_picklist {
    "envelope"
    "item"
    "bag"
    "satchel"
    "padded_bag"
    "carton"
    "pallet"
}
Enum Product2.s_c__Shipping_Weight_Unit__c_picklist {
    "gram"
    "kilogram"
    "metric ton"
    "ounce"
    "pound"
    "short ton"
}
Enum Product2.s_c__Subscription_Billing_Delay_Unit__c_picklist {
    "day"
    "month"
}
Enum Product2.s_c__Subscription_Pricing__c_picklist {
    "fixed_price"
}
Enum Product2.s_c__Subscription_Term_Unit__c_picklist {
    "day"
    "month"
}
Enum Product2.s_c__Subscription_Type__c_picklist {
    "Evergreen"
    "One-time"
}
Enum Product2.s_c__Tax_Category_Code__c_picklist {
    "None"
    "AU"
}
Enum Product2.s_c__Voucher_Usage__c_picklist {
    "store"
    "store_group"
    "any_store"
}
Enum Product2.s_c__Subscription_Behavior__c_picklist {
    "always_process_always_charge"
    "always_process_charge_if_possible"
    "always_process_charge_first"
    "always_process_never_charge"
    "never_process_charge_if_possible"
    "never_process_never_charge"
}

Table Standard.Product2 {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  Name string [not null]
  IsActive boolean [not null]
  IsArchived boolean [not null]
  s_c__Allow_Prepurchase__c boolean [not null, note: '[Future Use] If checked, this Product will be purchasable before the Available_On__c date']
  s_c__Available_On__c datetime [note: 'The date from which this Product is available for purchase']
  s_c__Barcode__c string [unique, note: 'Unique barcode for this Product']
  s_c__Booking_Duration__c double [note: 'The number of minutes this booking product lasts']
  s_c__Booking_End_Buffer__c double [note: 'The number of minutes required to be unbooked after each booking']
  s_c__Booking_Max_Attendees__c double [note: 'The maximum number of attendees that can attend a single booking of this product. i.e. If a booking is for a table for up to five people, you would set is to `5`']
  s_c__Booking_Require_Attendee_Details__c boolean [not null, note: 'If enabled, the customer will be asked to provide the booking attendee details on the order summary page']
  s_c__Booking_Start_Buffer__c double [note: 'The number of minutes required to be unbooked before each booking']
  s_c__Brand_Id__c integer [ref: > Standard.Account.Id, note: 'The Products brand as an associated Account tagged as Is Brand']
  s_c__Charge_Subscription__c boolean [not null, note: 'If a Subscription Product, the system will process the subscription each period']
  s_c__Condition__c Product2.s_c__Condition__c_picklist [note: 'The Condition of this Product, this is used in the merchant feed']
  s_c__Cost_Price__c currency [note: 'The cost price for this Product. This is only used for reporting purposes']
  s_c__Discontinue_On__c datetime [note: 'The date from which this Product will no longer be available in the store']
  s_c__Display_Name__c string [note: 'The title of the Product to use in the store. If this is blank the Product.Name field will be used']
  s_c__Downloads_Markdown__c textarea [note: 'Downloads for the product, this could be firmware, device drivers, documents etc.     You can use Markdown (https://www.markdownguide.org/) to format your text     and Liquid (https://help.getstoreconnect.com/documentation/liquid) to     make it dynamic']
  s_c__Features_Markdown__c textarea [note: 'Features of the Product, this can include images or videos etc.     You can use Markdown (https://www.markdownguide.org/) to format your text     and Liquid (https://help.getstoreconnect.com/documentation/liquid) to     make it dynamic']
  s_c__Has_Serial_Number__c boolean [not null, note: 'If enabled the system will allow entering a serial number when the Product is sold through StoreConnects POS system']
  s_c__Hs_Code__c string [note: 'Defines the Harmonized System (HS) code for this Product']
  s_c__Import_ID__c string [unique, note: 'Unique External ID that can be used when synchronising this Product with an external system']
  s_c__Is_Master__c boolean [not null, note: 'Set to true if this Product has variants or is a stand-alone product']
  s_c__Is_Voucher__c boolean [not null, note: 'Indicates the Product is for a Voucher.']
  s_c__Media_Upload__c string [note: 'Link to upload Media for this Product']
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the Product page']
  s_c__Meta_Keywords__c string [note: 'The content that appears within the meta keywords tag in the HEAD tag of the Product page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the Product page']
  s_c__Minimum_Sell_Price__c currency [note: 'If set this will be used as the minimum possible discounted price for this Product on StoreConnect POS. If blank there is no minimum price. Can be overridden by PriceBookEntry.Minimum_Sell_Price']
  s_c__Placeholder_For_Id__c integer [ref: > Standard.Product2.Id, note: 'Defines another Product to be displayed instead of this one when this product is Restricted']
  s_c__Position__c double [note: 'The position of this Product. Lower numbers are shown first, records without a number are sorted alphabetically by Name']
  s_c__Product_Trait_Template_Id__c integer [ref: > StoreConnect.s_c__Product_Trait_Template__c.Id, note: 'The Product_Trait_Template__c which should apply to this Product']
  s_c__Promotionable__c boolean [not null, note: '[Future Use] This field is not currently in use. It is slated for use in future development.']
  s_c__Require_Deposit__c boolean [not null, note: 'If checked, this Product will charge a deposit checkout, rather than full price']
  s_c__Search_Description_Markdown__c textarea [note: 'Provides a Search Description for your product page. Use Markdown or HTML to format your text. Find out more at https://help.getstoreconnect.com/documentation/how-to-use-markdown']
  s_c__Shipping_Dangerous_Goods__c boolean [not null, note: '[Future User] If checked, shows that the Product is considered as a dangerous good']
  s_c__Shipping_Dimensions_Unit__c Product2.s_c__Shipping_Dimensions_Unit__c_picklist [note: 'The unit of mearure of all shipping dimensions of this Product']
  s_c__Shipping_Height__c double [note: 'The height of the shipping packaging of this Product']
  s_c__Shipping_Length__c double [note: 'The length of the shipping packaging of this Product']
  s_c__Shipping_Methods__c Product2.s_c__Shipping_Methods__c_multipicklist [note: 'The shipping methods allowed for this Product']
  s_c__Shipping_Packaging_Type__c Product2.s_c__Shipping_Packaging_Type__c_picklist [note: 'The packaging type (code) used for shipping this Product with the Shipping_Provider__c']
  s_c__Shipping_Weight_Unit__c Product2.s_c__Shipping_Weight_Unit__c_picklist [note: 'The unit of measure for this Products Shipping_Weight__c']
  s_c__Shipping_Weight__c double [note: 'The weight of the shipping packaging of this Product']
  s_c__Shipping_Width__c double [note: 'The width of the shipping packaging of this Product']
  s_c__Slug__c string [unique, note: 'The unique slug which will be used to form this Products URL in the store']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Product is shared on Social Media. If not provided, will use the Products first image']
  s_c__Specifications_Markdown__c textarea [note: 'The specifications of the Product, this will appear before any traits.     You can use Markdown (https://www.markdownguide.org/) to format your text     and Liquid (https://help.getstoreconnect.com/documentation/liquid) to     make it dynamic']
  s_c__Subscription_Billing_Delay_Length__c double [note: 'Number of Billing Delay Units after the subscriptions Renewal Date to delay before charging the subscription amount. Allows you time to adjust subscription price and other details each term']
  s_c__Subscription_Billing_Delay_Unit__c Product2.s_c__Subscription_Billing_Delay_Unit__c_picklist [note: 'The unit of measure of the Subscription Billing Delay']
  s_c__Subscription_Pricing__c Product2.s_c__Subscription_Pricing__c_picklist [note: 'The pricing method used if this is a subscription Product. Currently only Fixed Price is supported']
  s_c__Subscription_Term_Count__c double [note: 'The number of full terms that this subscription will be processed if it is a One-time subscription. Term length is set by Subscription Term and Subscription Term Unit. A subscription that is processed monthly for one year will have 12 terms']
  s_c__Subscription_Term_Unit__c Product2.s_c__Subscription_Term_Unit__c_picklist [note: 'The unit of measure of the Subscription Term. All Subscription Products in the organisation must use the same unit']
  s_c__Subscription_Term__c double [note: 'The term of this subscription. Units are set by Subscription Term Unit. If Subscription Term Unit is Month, 3 would mean this subscription is to be processed every 3 months']
  s_c__Subscription_Type__c Product2.s_c__Subscription_Type__c_picklist [note: 'Evergreen runs each term with no end date. One-time runs each term for a number of terms (Subscription Term Count) then ends']
  s_c__Summary_Markdown__c textarea [note: 'Short summary for the product usually appearing near the price.       You can use Markdown (https://www.markdownguide.org/) to format your text       and Liquid (https://help.getstoreconnect.com/documentation/liquid) to       make it dynamic']
  s_c__Supplier_Code__c string [unique, note: 'The Suppliers Internal Code for this Product']
  s_c__Support_Markdown__c textarea [note: 'How to get support for the product and what support is available.     You can use Markdown (https://www.markdownguide.org/) to format your text     and Liquid (https://help.getstoreconnect.com/documentation/liquid) to     make it dynamic']
  s_c__Sync_To_Google__c boolean [not null, note: 'If enabled, this Product will be included in the Merchant Feeds']
  s_c__Tax_Category_Code__c Product2.s_c__Tax_Category_Code__c_picklist 
  s_c__Tax_Code__c string [note: 'Defines tax code for this product. Primarily set for third party tax services']
  s_c__Track_Inventory__c boolean [not null, note: 'If enabled the system will track the inventory levels of this Product']
  s_c__UPC__c string [unique, note: 'This is the UPC, EAN etc']
  s_c__Variant_Title__c string [note: 'This is the title of a variant Product. For example a Product "Bike" might have a "Red Small" variant.']
  s_c__Virtual__c boolean [not null, note: 'Indicates the Product is not a physical product that requires Shipping']
  s_c__Voucher_Email_Template__c string [note: 'Enter the API name for the email template to use when sending a Voucher']
  s_c__Voucher_Usage__c Product2.s_c__Voucher_Usage__c_picklist [note: 'Indicates whether the Voucher can be used on other Stores.']
  s_c__Warranty_Markdown__c textarea [note: 'The warranty you supply with the Product.     You can use Markdown (https://www.markdownguide.org/) to format your text     and Liquid (https://help.getstoreconnect.com/documentation/liquid) to     make it dynamic']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Preview_On_Site__c string [note: 'Link to website page for this Product so you can see what it looks like with the current configuration']
  s_c__Subscription_Behavior__c Product2.s_c__Subscription_Behavior__c_picklist [note: 'The Subscription Behavior of this Product, which is used to control how the subscription is processed and charged']
  Page_Product__c boolean [not null, note: 'Used to trigger a link between Order Item and Page through check-out']
  s_c__Search_Keywords__c textarea [note: 'Line-separated list of keywords to improve relevance in product search results']
}



Table Standard.User {
  Note {
'''
  Standard Object
'''
  }

  Id id [not null]
  Username string [not null]
  LastName string [not null]
  Name string [not null]
  Email email [not null]
  Alias string [not null]
  CommunityNickname string [not null]
  IsActive boolean [not null]
  s_c__Assisted_By_Name__c string [note: 'A display name for this User for the "Were you assisted to make this purchase?" dropdown in the checkout. If blank this User will not appear in the list.']
  s_c__PIN__c string [note: 'An optional PIN this User can use to log into a POS device']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__ProductSetupUserSettings__c textarea 
}


Enum s_c__Account_Credit_Ledger__c.s_c__Entry_Type__c_picklist {
    "credit"
    "debit"
}

Table StoreConnect.s_c__Account_Credit_Ledger__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account_Credit_Id__c integer [ref: > StoreConnect.s_c__Account_Credit__c.Id, not null, note: 'Specify the Account Credit record that this Account Credit Ledger entry belongs to']
  s_c__Amount__c currency [not null, note: 'Specify the value of this Account Credit Ledger entry']
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id, note: 'Specify the Contact that generated this Account Credit Ledger entry']
  s_c__Entry_Type__c s_c__Account_Credit_Ledger__c.s_c__Entry_Type__c_picklist [not null, note: 'Specify what type of entry this is, either: Credit or Debit']
  s_c__Payment_Id__c integer [ref: > StoreConnect.s_c__Payment__c.Id, note: 'Specify the Payment record that generated this Account Credit Ledger entry']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Account_Credit__c.s_c__Account_Credit_Type__c_picklist {
    "Store Credit"
    "Refund"
    "Return"
    "Gift Card"
}

Table StoreConnect.s_c__Account_Credit__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, not null, note: 'Specify the Account that this Account Credit belongs to']
  s_c__Account_Credit_Type__c s_c__Account_Credit__c.s_c__Account_Credit_Type__c_picklist [note: 'Specify what type of Account Credit is this']
  s_c__Display_Name__c string [note: 'Specify the name for this Account Credit that the customer will see']
  s_c__Expires_At__c datetime [note: 'Specify the exact time after which this Account Credit will no longer be able to be used.']
  s_c__Opening_Balance__c currency [not null, note: 'Specify the initial value of this Account Credit']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'Specify the Store that this Account Credit belongs to']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
  s_c__Current_Balance__c currency 
}


Enum s_c__Account_Points_Ledger__c.s_c__Entry_Type__c_picklist {
    "credit"
    "debit"
}
Enum s_c__Account_Points_Ledger__c.s_c__Usage__c_picklist {
    "store"
    "store_group"
    "any_store"
}
Enum s_c__Account_Points_Ledger__c.s_c__Reason_Code__c_picklist {
    "purchase"
    "earn"
}

Table StoreConnect.s_c__Account_Points_Ledger__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, not null, note: 'The Account this record belongs to']
  s_c__Activated__c boolean [not null, note: 'For credit entry types, records must be activated in order to be counted in the total balance']
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id, note: 'The Contact this record belongs to']
  s_c__Default_Rate_Used__c double [note: 'Stores the points conversion rate used (if any) to calculate the points for this entry']
  s_c__Entry_Type__c s_c__Account_Points_Ledger__c.s_c__Entry_Type__c_picklist [note: 'The type of ledger entry this is: "Credit" to add points, "Debit" to deduct points.']
  s_c__Expires_At__c datetime [note: 'The datetime at which these points expire']
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: 'The Order Item this record belongs to']
  s_c__Payment_Id__c integer [ref: > StoreConnect.s_c__Payment__c.Id, note: 'The Payment this record belongs to']
  s_c__Points_Value__c double [note: 'The number of points for this ledger entry']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The Store this record belongs to']
  s_c__Transaction_Currency_Value__c currency [note: 'The equivalent currency value at the time this record was created']
  s_c__Transaction_Currency__c string [note: 'The currency type at the time this record was created']
  s_c__Usage__c s_c__Account_Points_Ledger__c.s_c__Usage__c_picklist [note: 'For Credit entries, indicates whether the points can be used on other Stores']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
  s_c__Reason_Code__c s_c__Account_Points_Ledger__c.s_c__Reason_Code__c_picklist [note: 'Short code representing the reason for this ledger entry']
}



Table StoreConnect.s_c__Account_Product_Category__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, not null, note: 'The related Account']
  s_c__Product_Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null, note: 'The related Product Category']
}


Enum s_c__Article_Category__c.s_c__Type__c_picklist {
    "blog_post"
    "news_article"
    "press_release"
    "persona"
    "story_line"
}

Table StoreConnect.s_c__Article_Category__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Display_Name__c string [note: 'The name of the article category that you want to show up on the article category list on the website.']
  s_c__Information_Markdown__c textarea [note: 'Information to display after all the articles on the article category page.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Introduction_Markdown__c textarea [note: 'Information to display before all the articles on the article category page.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the Article Category page']
  s_c__Meta_Keywords__c string [note: 'The content that appears within the meta keywords tag in the HEAD tag of the Article Category page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the Article Category page']
  s_c__Parent_Category_Id__c integer [ref: > StoreConnect.s_c__Article_Category__c.Id, note: 'The parent article category this article category belongs to']
  s_c__Path__c string [not null, note: 'The path at which this article category can be found (unique per store)']
  s_c__Position__c double [note: 'The Position of this Article Category in navigation. Lower numbers are shown first, records without a number are sorted alphabetically by name']
  s_c__Slug__c string [unique, note: '[Deprecated] - Use Path']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Category is shared on Social Media. If not provided, will use the Categorys first image']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The store that this article category belongs to']
  s_c__Type__c s_c__Article_Category__c.s_c__Type__c_picklist [note: 'The type of articles that this category contains']
  s_c__Unique_Store_Path__c string [unique]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Article_Tag__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Article_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, note: 'Select the Article for this Article Tag']
  s_c__Position__c double [note: 'Set the display order position for this Article Tag']
  s_c__Tag_Id__c integer [ref: > StoreConnect.s_c__Tag__c.Id, not null, note: 'Select the Tag for this Article Tag']
}



Table StoreConnect.s_c__Article__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Author__c string [note: 'The name of the author of this article']
  s_c__Body_Markdown__c textarea [note: 'The main content of the article.     Use Markdown to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Hero_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The primary image to show for the article']
  s_c__Intro_Markdown__c textarea [note: 'The introduction of the article.     Use Markdown to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the page']
  s_c__Meta_Keywords__c string [note: 'The content that appears within the meta keywords tag in the HEAD tag of the page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the page']
  s_c__Path__c string [not null, note: 'The path at which this article can be found (unique per store).']
  s_c__Publish_On__c datetime [note: 'This is the earliest date that the content article will appear on the website.']
  s_c__Published__c boolean [not null, note: 'If checked, the article will appear on your website.']
  s_c__Require_Login__c boolean [not null, note: 'Require users to be logged in order to access this article.']
  s_c__Slug__c string [unique, note: 'A globally unique identifier for this article.']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Article is shared on Social Media. If not provided, will use the Articles hero image']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'Which store should this article be shown on.']
  s_c__Subtitle__c string [note: 'The subtitle of the article.']
  s_c__Summary_Markdown__c textarea [note: 'The summary allows you to give a short description for the     article to show when displaying the article. Use Markdown format     your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Title__c string [not null, note: 'The title of the article.']
  s_c__Unique_Store_Path__c string [unique]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Preview_On_Site__c string 
  s_c__Search_Keywords__c textarea [note: 'Line-separated list of keywords to improve relevance in article search results']
}



Table StoreConnect.s_c__Articles_Article_Categories__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Article_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, not null, note: 'The related Content Article']
  s_c__Category_Id__c integer [ref: > StoreConnect.s_c__Article_Category__c.Id, not null, note: 'The Article Categories that this article is in']
  s_c__Position__c double 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Attendee__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Booking_Id__c integer [ref: > StoreConnect.s_c__Booking__c.Id, not null]
  s_c__Attendance_Verified_By__c integer [ref: > Standard.User.Id]
  s_c__Attended__c boolean [not null, note: 'Check this if the Contact attended the Booking']
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id]
  s_c__Email__c email 
  s_c__First_Name__c string 
  s_c__Last_Name__c string 
  s_c__Phone__c phone 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your store.']
}


Enum s_c__Authentication_Provider__c.s_c__Provider__c_picklist {
    "azure"
    "experience_cloud"
    "google"
    "local"
}

Table StoreConnect.s_c__Authentication_Provider__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'Enable or disable the Authentication Provider']
  s_c__Authorised_Domains__c textarea [note: 'Additional domain names authorised to log in via SSO to StoreConnect for this store']
  s_c__Client_Id__c string [note: 'Authentication Provider Client ID']
  s_c__Client_Secret__c string [note: 'The Client Secret provided by your authentication provider']
  s_c__Provider_URL__c url [note: 'The URL from the Authentication Provider for authentication requests']
  s_c__Provider__c s_c__Authentication_Provider__c.s_c__Provider__c_picklist 
  s_c__Reset_Password_URL__c url [note: 'The URL from the Provider to be used for the Reset Password flow']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The Store using this Authentication Provider']
  s_c__Api_Options__c textarea [note: 'Additional API Options required for your authentication provider per the help documentation']
}


Enum s_c__Availability__c.s_c__Days_Of_Week__c_multipicklist {
    "monday"
    "tuesday"
    "wednesday"
    "thursday"
    "friday"
    "saturday"
    "sunday"
}

Table StoreConnect.s_c__Availability__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Days_Of_Week__c s_c__Availability__c.s_c__Days_Of_Week__c_multipicklist [note: 'The days of the week that this Availability applies to']
  s_c__End_Date__c date [note: 'The last date that this Availability applies is in effect. If left blank, this Availability is on-going']
  s_c__End_Time__c time [note: 'The time of day after which no booking (whole or part) can be made']
  s_c__Product_Bookable_Location_Id__c integer [ref: > StoreConnect.s_c__Product_Bookable_Location__c.Id, not null]
  s_c__Start_Date__c date [note: 'The first date that this Availability is in effect']
  s_c__Start_Time__c time [note: 'The time of day before which no booking (whole or part) can be made']
  s_c__Unavailable__c boolean [not null, note: 'If checked, indicates that this Availability defines an Unavailability window']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your store.']
}



Table StoreConnect.s_c__Bookable_Event__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Created_From_Availability__c boolean [not null, note: 'Indicates this was created via Availabilities']
  s_c__Display_Name__c string [note: 'The name of the Bookable Event to show in the Store']
  s_c__End_Date__c date [note: 'The end date of this Bookable Event as it will be in the timezone of its Bookable Location']
  s_c__End_Time__c time [note: 'The end time of this Bookable Event as it will be in the timezone of its Bookable Location']
  s_c__Product_Bookable_Location_Id__c integer [ref: > StoreConnect.s_c__Product_Bookable_Location__c.Id, not null]
  s_c__Start_Date__c date [note: 'The start date of this Bookable Event as it will be in the timezone of its Bookable Location']
  s_c__Start_Time__c time [note: 'The start time of this Bookable Event as it will be in the timezone of its Bookable Location']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your store.']
}



Table StoreConnect.s_c__Bookable_Location__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Uncheck to prevent bookings for this location']
  s_c__Address1__c string 
  s_c__Address2__c string 
  s_c__City__c string 
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id]
  s_c__Display_Name__c string [note: 'The name of the Bookable Location to show in the Store. If this is blank, Bookable Location Name will be used']
  s_c__Information_Markdown__c textarea [note: 'Information about this Bookable Location Use Markdown to format your text. Find out more at https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__State__c string 
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__Virtual__c boolean [not null, note: 'Check this if the Bookable Location is not a physical location']
  s_c__Zip_Code__c string 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your store.']
}


Enum s_c__Booking__c.s_c__Status__c_picklist {
    "booked"
    "confirmed"
    "cancelled"
    "attended"
}

Table StoreConnect.s_c__Booking__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Bookable_Event_Id__c integer [ref: > StoreConnect.s_c__Bookable_Event__c.Id, not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id]
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id]
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id]
  s_c__Status__c s_c__Booking__c.s_c__Status__c_picklist 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your store.']
}



Table StoreConnect.s_c__Change_Event__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Changed_Fields__c textarea 
  s_c__Event_Type__c string [not null]
  s_c__Message__c textarea 
  s_c__Metadata__c textarea 
  s_c__Object_Name__c string [not null]
  s_c__Object_Previous_Timestamp__c datetime 
  s_c__Object_Sc_Id__c string 
  s_c__Object_Sfid__c string 
  s_c__Processed_At__c datetime 
  s_c__Source__c string [not null]
  s_c__Status__c string [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__City__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id, not null, note: 'The Country that this City belongs to']
  s_c__Display_Name__c string [note: 'The name of the City that will show on the website. If empty, Name will be shown instead']
  s_c__State_Id__c integer [ref: > StoreConnect.s_c__State__c.Id, note: 'The State, Region, Territory or Province that this City belongs to']
}


Enum s_c__Collection_Point__c.s_c__Lead_Time_Units__c_picklist {
    "minutes"
    "hours"
    "days"
}

Table StoreConnect.s_c__Collection_Point__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Stock_Location_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null]
  s_c__Active__c boolean [not null, note: 'Is this collection point active']
  s_c__Description__c textarea [note: 'Additional markdown enabled description for this collection point']
  s_c__Display_Name__c string [note: 'The name shown to the customer, if blank, the name of the Collection Point is used instead']
  s_c__Geolocation__Latitude__s double 
  s_c__Geolocation__Longitude__s double 
  s_c__Geolocation__c location 
  s_c__Lead_Time_Duration__c double [not null, note: 'The amount of time you need to get the order ready. When combined with Lead Time Units it gives you a combined value such as "1 hour" or "2 days". Set as "0" for no lead time.']
  s_c__Lead_Time_Units__c s_c__Collection_Point__c.s_c__Lead_Time_Units__c_picklist [not null]
  s_c__Phone__c phone 
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'Indicates that this Collection Point should only be offered for this Store']
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, note: 'Indicates that this Collection Point should only be offered for this Zone']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Outlet_Id__c integer [ref: > StoreConnect.s_c__Outlet__c.Id, note: 'The Outlet that manages the Orders to be picked up at this Collection Point']
}



Table StoreConnect.s_c__Compliance_Group__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether the Compliance Group is active. Only active Compliance Groups will be shown on the website']
  s_c__Display_Name__c string [note: 'The name of the Compliance Group that will show on the website. If empty, Name will be shown instead']
  s_c__Information_Markdown__c textarea [note: 'Information about the Compliance Group to be shown on the web store.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Position__c double [note: 'This defines the display order of the Compliance Groups on the website. Lower numbers appear first']
  s_c__Required__c boolean [not null, note: 'Defines whether or not this Compliance Group can be disabled by the website user']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The Store that the Compliance Group belongs to']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Content_Block__c.s_c__Alignment__c_picklist {
    "center"
    "center-text"
    "top"
    "bottom"
    "left"
    "right"
}
Enum s_c__Content_Block__c.s_c__Layout_Style__c_picklist {
    "none"
    "even-distribution"
    "one-third-two-thirds"
    "two-thirds-one-third"
    "two-column"
    "three-column"
    "four-column"
    "one-to-two-column"
    "one-to-three-column"
    "one-to-four-column"
}
Enum s_c__Content_Block__c.s_c__Sub_Type__c_picklist {
    "hero_image"
    "expanded"
    "offset"
    "image_background"
    "image_wrapped"
    "image_separator"
}
Enum s_c__Content_Block__c.s_c__Template__c_picklist {
    "sc-standard-video-hero"
    "sc-fancy-center-video-hero"
    "sc-feat-prod-slider"
    "sc-img-header"
    "sc-imageRight-textLeft"
    "sc-imageLeft-textRight"
    "sc-video-hero-four-option"
    "container"
    "featured_articles"
    "featured_pages"
    "featured_products"
    "featured_categories"
    "image"
    "media"
    "image_beside_text"
    "image_text_overlay"
    "slideshow"
    "text"
    "html"
    "hero"
    "card_icon"
    "sc-cta-action-banner"
    "icon-cards"
    "inf-logo-block"
}

Table StoreConnect.s_c__Content_Block__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Alignment__c s_c__Content_Block__c.s_c__Alignment__c_picklist 
  s_c__Content_Markdown__c textarea [note: 'This is the main text content of the block.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Document_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__File_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Identifier__c string [unique, note: 'The identifier is used for the front end of your store     to identify this content block within the pages in special     cases. Changing this could have unintended consequences     on your site.']
  s_c__Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Layout_Style__c s_c__Content_Block__c.s_c__Layout_Style__c_picklist 
  s_c__Link_Label__c string 
  s_c__Link_Target__c string 
  s_c__Media_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Pull_Text_Markdown__c textarea [note: 'The content block pull text call to action.  You can use Markdown     (https://www.markdownguide.org/) to format the heading and Liquid     (https://help.getstoreconnect.com/documentation/liquid) to     make it dynamic.']
  s_c__Sub_Type__c s_c__Content_Block__c.s_c__Sub_Type__c_picklist 
  s_c__Subtitle__c string 
  s_c__Summary_Markdown__c textarea [note: 'The content block summary.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Template__c s_c__Content_Block__c.s_c__Template__c_picklist [not null, note: 'Determines the how the content is displayed for this content block']
  s_c__Title__c string 
  s_c__Video_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Content_Blocks_Articles__c.s_c__Usage_Type__c_picklist {
    "featured"
    "content"
}

Table StoreConnect.s_c__Content_Blocks_Articles__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Article_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, not null]
  s_c__Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, not null]
  s_c__Position__c double 
  s_c__Tag__c string 
  s_c__Usage_Type__c s_c__Content_Blocks_Articles__c.s_c__Usage_Type__c_picklist 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Content_Blocks_Children__c.s_c__Usage_Type__c_picklist {
    "content"
}

Table StoreConnect.s_c__Content_Blocks_Children__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Child_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, not null]
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, not null]
  s_c__Position__c double 
  s_c__Tag__c string 
  s_c__Usage_Type__c s_c__Content_Blocks_Children__c.s_c__Usage_Type__c_picklist 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Content_Blocks_Pages__c.s_c__Usage_Type__c_picklist {
    "content"
    "featured"
}

Table StoreConnect.s_c__Content_Blocks_Pages__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, not null]
  s_c__Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, not null]
  s_c__Position__c double 
  s_c__Tag__c string 
  s_c__Usage_Type__c s_c__Content_Blocks_Pages__c.s_c__Usage_Type__c_picklist 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Content_Blocks_Product_Categories__c.s_c__Usage_Type__c_picklist {
    "featured"
}

Table StoreConnect.s_c__Content_Blocks_Product_Categories__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null]
  s_c__Cntnt_Blk_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, not null]
  s_c__Position__c double 
  s_c__Tag__c string 
  s_c__Usage_Type__c s_c__Content_Blocks_Product_Categories__c.s_c__Usage_Type__c_picklist 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Content_Blocks_Products__c.s_c__Usage_Type__c_picklist {
    "featured"
    "features"
    "downloads"
    "specifications"
    "support"
    "warranty"
}

Table StoreConnect.s_c__Content_Blocks_Products__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, not null]
  s_c__Position__c double 
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Tag__c string 
  s_c__Usage_Type__c s_c__Content_Blocks_Products__c.s_c__Usage_Type__c_picklist 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Cookie__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether the Cookie is active. Only active cookies will be referenced on the website']
  s_c__Compliance_Group_Id__c integer [ref: > StoreConnect.s_c__Compliance_Group__c.Id]
  s_c__Display_Name__c string [note: 'The name of the Cookie that will show on the website. If empty, Name will be shown instead']
  s_c__Information_Markdown__c textarea [note: 'Information about the Cookie to be shown on the web store.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Position__c double [note: 'This defines the display order of the Cookies on the website. Lower numbers appear first']
  s_c__Script_Block_Id__c integer [ref: > StoreConnect.s_c__Script_Block__c.Id, note: 'Defines the Script Block that is responsible for the Cookie. If the website user disables this cookie, the Script Block will not be included on the website']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Country__c.s_c__Code__c_picklist {
    "AFG"
    "ALA"
    "ALB"
    "DZA"
    "ASM"
    "AND"
    "AGO"
    "AIA"
    "ATA"
    "ATG"
    "ARG"
    "ARM"
    "ABW"
    "AUS"
    "AUT"
    "AZE"
    "BHS"
    "BHR"
    "BGD"
    "BRB"
    "BLR"
    "BEL"
    "BLZ"
    "BEN"
    "BMU"
    "BTN"
    "BOL"
    "BES"
    "BIH"
    "BWA"
    "BVT"
    "BRA"
    "BRN"
    "BGR"
    "BFA"
    "BDI"
    "CPV"
    "KHM"
    "CMR"
    "CAN"
    "CYM"
    "CAF"
    "TCD"
    "CHL"
    "CHN"
    "CXR"
    "CCK"
    "COL"
    "COM"
    "COD"
    "COG"
    "COK"
    "CRI"
    "CIV"
    "HRV"
    "CUB"
    "CUW"
    "CYP"
    "CZE"
    "DNK"
    "DJI"
    "DMA"
    "DOM"
    "ECU"
    "EGY"
    "SLV"
    "GNQ"
    "ERI"
    "EST"
    "SWZ"
    "ETH"
    "FLK"
    "FRO"
    "FJI"
    "FIN"
    "FRA"
    "ATF"
    "GUF"
    "PYF"
    "GAB"
    "GMB"
    "GEO"
    "DEU"
    "GHA"
    "GIB"
    "GRC"
    "GRL"
    "GRD"
    "GLP"
    "GUM"
    "GTM"
    "GGY"
    "GIN"
    "GNB"
    "GUY"
    "HTI"
    "HMD"
    "VAT"
    "HND"
    "HKG"
    "HUN"
    "ISL"
    "IND"
    "IOT"
    "IDN"
    "IRN"
    "IRQ"
    "IRL"
    "IMN"
    "ISR"
    "ITA"
    "JAM"
    "JPN"
    "JEY"
    "JOR"
    "KAZ"
    "KEN"
    "KIR"
    "KOR"
    "PRK"
    "KWT"
    "KGZ"
    "LAO"
    "LVA"
    "LBN"
    "LSO"
    "LBR"
    "LBY"
    "LIE"
    "LTU"
    "LUX"
    "MAC"
    "MDG"
    "MWI"
    "MYS"
    "MDV"
    "MLI"
    "MLT"
    "MHL"
    "MTQ"
    "MRT"
    "MUS"
    "MYT"
    "MEX"
    "FSM"
    "MDA"
    "MCO"
    "MNG"
    "MNE"
    "MSR"
    "MAR"
    "MOZ"
    "MMR"
    "NAM"
    "NRU"
    "NPL"
    "NLD"
    "NCL"
    "NZL"
    "NIC"
    "NER"
    "NGA"
    "NIU"
    "NFK"
    "MNP"
    "NOR"
    "OMN"
    "PAK"
    "PLW"
    "PSE"
    "PAN"
    "PNG"
    "PRY"
    "PER"
    "PHL"
    "PCN"
    "POL"
    "PRT"
    "PRI"
    "QAT"
    "MKD"
    "REU"
    "ROU"
    "RUS"
    "RWA"
    "BLM"
    "KNA"
    "LCA"
    "MAF"
    "SHN"
    "SPM"
    "VCT"
    "WSM"
    "SMR"
    "STP"
    "SAU"
    "SEN"
    "SRB"
    "SYC"
    "SLE"
    "SGP"
    "SXM"
    "SVK"
    "SVN"
    "SLB"
    "SOM"
    "SGS"
    "SSD"
    "ZAF"
    "ESP"
    "LKA"
    "SDN"
    "SUR"
    "SJM"
    "SWE"
    "CHE"
    "SYR"
    "TWN"
    "TJK"
    "TZA"
    "THA"
    "TLS"
    "TGO"
    "TKL"
    "TON"
    "TTO"
    "TUN"
    "TUR"
    "TKM"
    "TCA"
    "TUV"
    "UGA"
    "UKR"
    "ARE"
    "GBR"
    "UMI"
    "USA"
    "URY"
    "UZB"
    "VUT"
    "VEN"
    "VNM"
    "VGB"
    "VIR"
    "WLF"
    "ESH"
    "YEM"
    "ZMB"
    "ZWE"
}

Table StoreConnect.s_c__Country__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Code__c s_c__Country__c.s_c__Code__c_picklist [not null, note: 'The country (note, this picklist must comply with the ISO 3166 standard, e.g. "AUS" for Australia or "USA" for United States)']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Custom_Data_Mapping__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Component_Fields__c textarea [note: 'Auto-generated cache of component fields for internal use']
  s_c__Data_Type__c string [note: 'Data type of the field to be synced']
  s_c__Field_API_Name__c string [note: 'API name of the field to be synced including namespace']
  s_c__Object_API_Name__c string [not null, note: 'API name of the object to be synced']
  s_c__Unique_Custom_Data_Mapping_Key__c string [unique, note: 'Do not change this value.']
}



Table StoreConnect.s_c__Data_Feed_Field__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Data_Feed_Id__c integer [ref: > StoreConnect.s_c__Data_Feed__c.Id, not null]
  s_c__Field_Label__c string [not null, note: 'The label used for this field. Appears in the header row of a CSV export.']
  s_c__Field_Name__c string [not null, note: 'The field API name used to generate the value for this data feed field. Can be any of the field names listed in the help documentation.']
  s_c__Fixed_Value__c string [note: 'A fixed value for this field which is the same for every row.']
  s_c__Position__c double [not null, note: 'Sets the position of this field within its export']
  s_c__Skip_Row_If_Blank__c boolean [not null, note: 'Means this row will not be exported if this field is blank.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Data_Feed__c.s_c__Object_Type__c_picklist {
    "Product2"
    "Order"
}
Enum s_c__Data_Feed__c.s_c__Refresh_Frequency__c_picklist {
    "1440"
    "720"
    "240"
}

Table StoreConnect.s_c__Data_Feed__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'If active then this export will be accessible via feeds/filename of the export']
  s_c__Filename__c string [not null, note: 'The filename at which this export can be found (unique per store).']
  s_c__Object_Type__c s_c__Data_Feed__c.s_c__Object_Type__c_picklist [not null, note: 'Select the object type for this feed']
  s_c__Password__c string [note: 'The password used for this export, leave blank for no password.']
  s_c__Refresh_Frequency__c s_c__Data_Feed__c.s_c__Refresh_Frequency__c_picklist [not null, note: 'Select how often this feed should be refreshed']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__Unique_Store_Filename__c string [unique]
  s_c__Username__c string [note: 'The username used for this export, leave blank for no username requirement.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Download_Export_Link__c string 
}


Enum s_c__Delivery_Window__c.s_c__Days_of_Week__c_multipicklist {
    "monday"
    "tuesday"
    "wednesday"
    "thursday"
    "friday"
    "saturday"
    "sunday"
}
Enum s_c__Delivery_Window__c.s_c__Duration_Unit__c_picklist {
    "day"
    "week"
    "month"
    "year"
}
Enum s_c__Delivery_Window__c.s_c__Offset_Unit__c_picklist {
    "day"
    "week"
    "months"
    "year"
}

Table StoreConnect.s_c__Delivery_Window__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Set the Delivery Window as enabled or disabled']
  s_c__Days_of_Week__c s_c__Delivery_Window__c.s_c__Days_of_Week__c_multipicklist [note: 'The days of the week enabled for the Delivery Window']
  s_c__Duration_Unit__c s_c__Delivery_Window__c.s_c__Duration_Unit__c_picklist [note: 'The unit of measure for the Delivery Window Duration']
  s_c__Duration__c double [note: 'The maximum number of days/weeks/months/years in the future the customer can select a delivery date']
  s_c__Offset_Unit__c s_c__Delivery_Window__c.s_c__Offset_Unit__c_picklist [note: 'The unit of measure for the Delivery Window Offset']
  s_c__Offset__c double [note: 'The minimum number of days/weeks/months/years in the future the customer can select a delivery date']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The Store associated with this Delivery Window']
  s_c__Times_of_Day__c textarea [note: 'The times of the day allowed for the Delivery Window']
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, note: 'The Zone associated with this Delivery Window']
}


Enum s_c__Discount_Credit__c.s_c__Calculation_Type__c_picklist {
    "percent"
    "value"
    "discounted_price"
}

Table StoreConnect.s_c__Discount_Credit__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Calculation_Type__c s_c__Discount_Credit__c.s_c__Calculation_Type__c_picklist [not null, note: 'How the discount was applied: as a percentage, or a dollar value, or a replacement price']
  s_c__Credit_Value__c currency [not null, note: 'The calculated credit value applied to the order as a result of applying this discount']
  s_c__Discount_Id__c integer [ref: > StoreConnect.s_c__Discount__c.Id, note: 'The Discount object that was applied to the related order']
  s_c__Discounted_Price__c currency [note: 'The set price applied if the Calculation_Type__c is set to Discounted Price']
  s_c__Order_Id__c integer [ref: > Standard.Order.Id, note: 'The Order object that the discount was applied to']
  s_c__Percent_Discount__c percent [note: 'The percentage of discount applied if the Calculation_Type__c is set to Discount Percentage']
  s_c__Qualifying_Quantity__c double [note: '[Future use] How many items did the user need to purchase of the scope before this discount was applied to all items in the scope']
  s_c__Value_Discount__c currency [note: 'The amount of discount applied if the Calculation_Type__c is set to Discount Amount']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Credit_Value_Points__c double [note: 'The calculated credit value in points applied to the order as a result of applying this discount.']
  s_c__Discounted_Points__c double [note: 'The set amount in points applied if the Calculation_Type__c is set to Discounted Price.']
  s_c__Value_Discount_Points__c double [note: 'The amount of discount in points applied if the Calculation_Type__c is set to Discount Amount.']
}


Enum s_c__Discount__c.s_c__Apply_Discount_To__c_picklist {
    "cart"
    "product"
    "shipping"
}
Enum s_c__Discount__c.s_c__Behaviour_When_Applied__c_picklist {
    "stack"
    "replace"
    "set_price"
}
Enum s_c__Discount__c.s_c__Calculation_Type__c_picklist {
    "percent"
    "value"
    "discounted_price"
}

Table StoreConnect.s_c__Discount__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, note: 'The account eligible for this discount. If left blank, the discount applies to all accounts']
  s_c__Active__c boolean [not null, note: 'Set the discount as enabled or disabled']
  s_c__Apply_Discount_To__c s_c__Discount__c.s_c__Apply_Discount_To__c_picklist 
  s_c__Behaviour_When_Applied__c s_c__Discount__c.s_c__Behaviour_When_Applied__c_picklist [not null, note: 'Stack with other discounts, replace any discount with the current one, or set an exact discounted price that supercedes all discounts']
  s_c__Brand_Id__c integer [ref: > Standard.Account.Id, note: 'The product brand that this Discount applies to']
  s_c__Calculation_Type__c s_c__Discount__c.s_c__Calculation_Type__c_picklist [not null]
  s_c__Discounted_Price__c currency [note: 'Discounted Price will set the products price for the duration of the discount. If a sale price is set for the products price book entry, the lowest value between the sale price and discounted price will be selected']
  s_c__Ending_Date__c date 
  s_c__Expires_At__c datetime [note: 'Set this to the exact time this discount will no longer be available. If this is in the future, please any change in time zone into account when setting.']
  s_c__Membership_Id__c integer [ref: > StoreConnect.s_c__Membership__c.Id, note: 'The Membership that this discount applies to']
  s_c__Percent_Discount__c percent 
  s_c__Pricebook_Id__c integer [ref: > Standard.Pricebook2.Id]
  s_c__Product_Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, note: 'The Product Category object that this discount applies to, if set, this discount can only be used by this Product Category. If left as empty, it applies to all Product Categories']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Qualifying_Quantity__c double [note: '[Future] This field is not currently in use. It is slated for use in future development.']
  s_c__Rebate_Amount__c currency [note: 'A rebate amount is the amount that the shopper is given in credit for their next order.']
  s_c__Starting_Date__c date 
  s_c__Starts_At__c datetime [note: 'Set this to the exact time this discount will become available. If this is in the future, please any change in time zone into account when setting.']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id]
  s_c__Value_Discount__c currency 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Discounted_Points__c double [note: 'Discounted Price will set the products purchase points for the duration of the discount. If a sale points is set for the products price book entry, the lowest value between the sale points and discounted points will be selected']
  s_c__Value_Discount_Points__c double 
}



Table StoreConnect.s_c__Error_Definition__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Description__c textarea 
  s_c__Key__c string 
  s_c__Summary__c textarea 
  s_c__Version__c string 
}



Table StoreConnect.s_c__Form_Answer__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Answer__c textarea [note: 'The value supplied by the customer for this answer']
  s_c__Data_Type__c string [note: 'The data type for this submitted form answer']
  s_c__Editable__c boolean [not null, note: 'Determines whether this answer should be editable by the user']
  s_c__Form_Question_Id__c integer [ref: > StoreConnect.s_c__Form_Question__c.Id, note: 'The form question submitted for this answer']
  s_c__Form_Submission_Id__c integer [ref: > StoreConnect.s_c__Form_Submission__c.Id]
  s_c__Question_Content__c textarea [note: 'The form question presented to the customer for this answer']
  s_c__Stale__c boolean [not null, note: 'If True the user has created a new (i.e. edited) answer for the Form Question']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Form_Question__c.s_c__Data_Type__c_picklist {
    "Boolean"
    "Integer"
    "Decimal"
    "Text"
    "Date"
    "Datetime"
    "File"
    "Picklist"
    "Multi-Picklist"
    "Text Area"
}
Enum s_c__Form_Question__c.s_c__Default_Type__c_picklist {
    "Expression"
    "Value"
}
Enum s_c__Form_Question__c.s_c__Picklist_Type__c_picklist {
    "Expression"
    "Value"
}

Table StoreConnect.s_c__Form_Question__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Data_Type__c s_c__Form_Question__c.s_c__Data_Type__c_picklist [note: 'The data type of the form answer']
  s_c__Default_Type__c s_c__Form_Question__c.s_c__Default_Type__c_picklist [note: 'The type of default value to evaluate']
  s_c__Default_Value__c textarea [note: 'The default value evaluated based on default type']
  s_c__Editable__c boolean [not null, note: 'Determines whether the answers to this Form Question should be editable by the user']
  s_c__Form_Id__c integer [ref: > StoreConnect.s_c__Form__c.Id, note: 'The form associated to this question']
  s_c__Hidden__c boolean [not null, note: 'Determines whether the question should not be visible on the form']
  s_c__Picklist_Options__c textarea [note: 'The list of options for a picklist or multi-picklist evaluated based on picklist type.']
  s_c__Picklist_Type__c s_c__Form_Question__c.s_c__Picklist_Type__c_picklist [note: 'The type of picklist options']
  s_c__Position__c double [note: 'Lower numbers are shown first, records without numbers are sorted alphabetically by name']
  s_c__Question_Markdown__c textarea [note: 'The question on the form to be presented to the customer. Use Markdown or HTML to format your text. Find out more at https://help.getstoreconnect.com/documentation/how-to-use-markdown']
  s_c__Required__c boolean [not null, note: 'Determines whether the question is required to proceed']
  s_c__Validation_Rules__c textarea [note: 'Determines the criteria/conditions to be met on a question']
}



Table StoreConnect.s_c__Form_Submission__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id, note: 'The contact associated with this submitted form']
  s_c__Form_Id__c integer [ref: > StoreConnect.s_c__Form__c.Id, note: 'The form associated to this submission']
  s_c__Order_Id__c integer [ref: > Standard.Order.Id, note: 'The order associated with this submitted form']
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: 'The order item associated with this submitted form']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The store associated with this submitted form']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Form__c.s_c__Display_Mode__c_picklist {
    "add_to_cart"
    "in_checkout"
    "after_checkout"
}

Table StoreConnect.s_c__Form__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Conditions__c textarea [note: 'The conditions under which the form should be shown']
  s_c__Display_Mode__c s_c__Form__c.s_c__Display_Mode__c_picklist [note: 'The display mode of the form']
  s_c__Display_Name__c string [note: 'The preferred form name to show on the form. If empty, Name will be shown instead']
  s_c__Identifier__c string [note: 'A globally unique identifier for this form']
  s_c__Record_Type_Name__c string [note: 'For internal use only']
  s_c__Success_Markdown__c textarea [note: 'The content to be presented to the customer when a CustomForm is submitted successfully. Use Markdown or HTML to format your text. Find out more at https://help.getstoreconnect.com/documentation/how-to-use-markdown']
  s_c__Success_Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, note: 'The page to be displayed when the CustomForm is submitted successfully']
}



Table StoreConnect.s_c__Fulfillment_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: 'The OrderItem this FulfillmentItem belongs to']
  s_c__Quantity__c double [not null, note: 'Full or partial quantity of the Order Product included in the Shipment']
  s_c__Shipment_Id__c integer [ref: > StoreConnect.s_c__Shipment__c.Id, note: 'The Shipment this FulfillmentItem belongs to']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Locale_Translation__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Theme_Locale_Id__c integer [ref: > StoreConnect.s_c__Theme_Locale__c.Id, not null]
  s_c__Key__c string [not null, note: 'Specify a unique value that represents the Translation.']
  s_c__Unique_Locale_Key__c string [unique, note: 'Do not change this value.']
  s_c__Value__c textarea [note: 'Enter a translation for this item.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}



Table StoreConnect.s_c__Location_Group_Account__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, not null, note: 'The related Account']
  s_c__Location_Group_Id__c integer [ref: > StoreConnect.s_c__Location_Group__c.Id, not null, note: 'The related Location Group']
}



Table StoreConnect.s_c__Location_Group__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Only active Location Groups will be visible on the Store']
  s_c__Display_Name__c string [note: 'The name to show on the Store for this Location Group. If blank, Name will be used instead.']
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the page']
  s_c__Meta_Keywords__c string [note: 'Comma separated list of keywords to appear within the meta keywords tag in the HEAD tag of the page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the page']
  s_c__Path__c string [not null, note: 'The path at which this Location Group can be found (unique per store)']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Group is shared on Social Media']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The associated Store for this Location Group.']
  s_c__Unique_Store_Path__c string [unique, note: 'Do not change this value.']
}



Table StoreConnect.s_c__Manual_Stock_Adjustment_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Entered_By_Id__c integer [ref: > Standard.User.Id, note: 'The User which entered this Manual Stock Adjustment Item']
  s_c__Manual_Stock_Adjustment_Id__c integer [ref: > StoreConnect.s_c__Manual_Stock_Adjustment__c.Id, note: 'The `Manual_Stock_Adjustment__c` which this Item belongs to']
  s_c__Notes__c textarea [note: 'Holds any notes entered by the user when creating this Manual Stock Adjustment Item']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The product this stock adjustment applies to']
  s_c__Quantity__c double [note: 'The quantity of this adjustment - for adjustments this is the relative change, for stocktake this is the absolute value']
  s_c__Stock_On_Hand__c double [note: 'The available stock on hand before this adjustment was applied']
  s_c__Unit_Cost__c currency [note: 'The cost price of the Product when this Adjustment Item was created']
  s_c__Unit_Variance__c double [note: 'The change in unit count after this adjustment is applied']
  s_c__Value_On_Hand__c currency [note: 'The total value (cost price * unit count) of the Product before this adjustment is applied']
  s_c__Value_Variance__c currency [note: 'The change in monetary value (cost price * unit count of stock on hand after this adjustment is applied']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Manual_Stock_Adjustment__c.s_c__Status__c_picklist {
    "draft"
    "void"
    "complete"
}

Table StoreConnect.s_c__Manual_Stock_Adjustment__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Committed_By_Id__c integer [ref: > Standard.User.Id, note: 'The User which committed this Manual Stock Adjustment']
  s_c__Created_By_Id__c integer [ref: > Standard.User.Id, note: 'The User which created this Manual Stock Adjustment']
  s_c__Effective_Date__c date [note: 'Effective Date for this Manual Stock Adjustment']
  s_c__Notes__c textarea [note: 'Holds any notes entered by the user when creating this Manual Stock Adjustment']
  s_c__Reference__c string [note: 'Reference details for this Manual Stock Adjustment']
  s_c__Status__c s_c__Manual_Stock_Adjustment__c.s_c__Status__c_picklist [note: 'The Status of this Manual Stock Adjustment']
  s_c__Stock_Location_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, note: 'The `Stock_Location__c` which this Manual Stock Adjustment applies to']
  s_c__Supplier_Id__c integer [ref: > Standard.Account.Id, note: 'The supplier this Manual Stock Adjustment relates to (if any)']
  s_c__Total_Variance_Value__c currency [note: 'The total of the value variance in this Manual Stock Adjustment']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Media__c.s_c__File_Type__c_picklist {
    "image"
    "video"
    "document"
    "file"
    "url"
}

Table StoreConnect.s_c__Media__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Alt_Text__c string [note: 'The alternate text supplied for this media item, used by         SEO to say what the media object is']
  s_c__Description__c textarea [note: 'Internal description of this media item']
  s_c__Embed_Video_Url__c string [note: '[Deprecated] Use Url__c instead for populating video urls or use the video snippet in liquid']
  s_c__File_Type__c s_c__Media__c.s_c__File_Type__c_picklist [not null]
  s_c__File__c textarea [note: '[Deprecated] See Url__c instead']
  s_c__Identifier__c string [unique, note: 'The identifier is used for the front end of your store     to identify this media object within the pages in special     cases']
  s_c__Import_Url__c string [note: 'Allows media files to be uploaded directly from URL']
  s_c__Key_Frame_Seconds__c double [note: 'This determines what frame will be used as preview image given video url']
  s_c__Large_Image__c url [note: '[Deprecated] Image sizes are automatically generated']
  s_c__Medium_Image__c url [note: '[Deprecated] Image sizes are automatically generated']
  s_c__Original_Image__c url [note: '[Deprecated] See Url__c instead']
  s_c__Processed_At__c datetime 
  s_c__Started_At__c datetime 
  s_c__Thumbnail_Image__c url [note: '[Deprecated] Image sizes are automatically generated']
  s_c__Url__c url [note: 'URL of the media uploaded']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Image_Preview__c string 
}



Table StoreConnect.s_c__Membership_Article__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Membership_Id__c integer [ref: > StoreConnect.s_c__Membership__c.Id, not null, note: 'The membership that an account must belong to in order to access the selected article']
  s_c__Article_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, not null, note: 'The article that only accounts belonging to the selected membership have the right to access']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Membership_Page__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Membership_Id__c integer [ref: > StoreConnect.s_c__Membership__c.Id, not null, note: 'The membership that an account must be associated with in order to access the selected page']
  s_c__Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, not null, note: 'The page that only accounts belonging to the selected membership have the right to access']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Membership__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Display_Name__c string 
  s_c__Pricebook_Id__c integer [ref: > Standard.Pricebook2.Id, note: 'Provide a Price Book for members to give them special pricing. If an Account has an assigned Price Book then that Price Book will be used instead']
  s_c__Product2_Id__c integer [ref: > Standard.Product2.Id, note: 'Select a product that is used to purchase this membership']
  s_c__Product_Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, note: 'Any of the product in this Product Category when purchased will assign this membership to the account of the contact who purchased it']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Menu_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Article_Category_Id__c integer [ref: > StoreConnect.s_c__Article_Category__c.Id, note: 'The article category to include in this menu item position.']
  s_c__Article_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, note: 'The article that will be linked to this menu item.']
  s_c__Child_Category_Levels__c double [note: 'How many levels to show automatically under the category tree.']
  s_c__Display_Name__c string [note: 'Leave blank to show the associated object display name, or override it here.']
  s_c__Hide__c boolean [not null, note: 'Hide this menu item from showing in the menu.']
  s_c__Identifier__c string [not null, note: 'The identifier for this menu item (unique per store).']
  s_c__Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The image that will be displayed within the menu item.']
  s_c__Menu_Id__c integer [ref: > StoreConnect.s_c__Menu__c.Id, not null, note: 'The Menu that this Menu Item belongs to.']
  s_c__Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, note: 'The page that will be linked to this menu item.']
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Menu_Item__c.Id, note: 'The parent menu item or none for a top level menu.']
  s_c__Position__c double [note: 'The menu item position.']
  s_c__Product_Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, note: 'The product category to include in this menu item position.']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The product that will be linked to this menu item.']
  s_c__Show_Image__c boolean [not null, note: 'Display the image of the object being rendered or the image on this menu item.']
  s_c__Style_Class_Names__c string [note: 'CSS classes you would like to add to this menu item, separated by spaces.']
  s_c__URL__c url 
  s_c__Unique_Store_Identifier__c string [unique]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Menu__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Identifier__c string [not null, note: 'The identifier for this menu (unique per store).']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__Style_Class_Names__c string [note: 'CSS classes you would like to add to this menu, separated by spaces.']
  s_c__Unique_Store_Identifier__c string [unique]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Opening_Time__c.s_c__Close_Time__c_picklist {
    "06:00"
    "06:30"
    "07:00"
    "07:30"
    "08:00"
    "08:30"
    "09:00"
    "09:30"
    "10:00"
    "10:30"
    "11:00"
    "11:30"
    "12:00"
    "12:30"
    "13:00"
    "13:30"
    "14:00"
    "14:30"
    "15:00"
    "15:30"
    "16:00"
    "16:30"
    "17:00"
    "17:30"
    "18:00"
    "18:30"
    "19:00"
    "19:30"
    "20:00"
}
Enum s_c__Opening_Time__c.s_c__Open_Time__c_picklist {
    "06:00"
    "06:30"
    "07:00"
    "07:30"
    "08:00"
    "08:30"
    "09:00"
    "09:30"
    "10:00"
    "10:30"
    "11:00"
    "11:30"
    "12:00"
    "12:30"
    "13:00"
    "13:30"
    "14:00"
    "14:30"
    "15:00"
    "15:30"
    "16:00"
    "16:30"
    "17:00"
    "17:30"
    "18:00"
    "18:30"
    "19:00"
    "19:30"
    "20:00"
}
Enum s_c__Opening_Time__c.s_c__Weekday__c_picklist {
    "monday"
    "tuesday"
    "wednesday"
    "thursday"
    "friday"
    "saturday"
    "sunday"
}

Table StoreConnect.s_c__Opening_Time__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'Is this opening time active']
  s_c__Close_Time__c s_c__Opening_Time__c.s_c__Close_Time__c_picklist [not null, note: 'The time that this opening time ends']
  s_c__Collection_Point_Id__c integer [ref: > StoreConnect.s_c__Collection_Point__c.Id]
  s_c__Date__c datetime [note: 'Date when this opening time will take place and will over-ride an opening time set for a day of the week']
  s_c__Open_Time__c s_c__Opening_Time__c.s_c__Open_Time__c_picklist [not null, note: 'The time that this opening time starts']
  s_c__Weekday__c s_c__Opening_Time__c.s_c__Weekday__c_picklist [note: 'The week day this opening time applies to']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Order_Campaign__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Order_Id__c integer [ref: > Standard.Order.Id, not null, note: 'The Order which was created through this campaign']
  s_c__UTM_Campaign__c string [note: 'The utm-campaign parameter specified in this referral']
  s_c__UTM_Content__c string [note: 'The utm-content parameter specified in this referral']
  s_c__UTM_Medium__c string [note: 'The utm-medium parameter specified in this referral']
  s_c__UTM_Source__c string [note: 'The utm-source parameter specified in this referral']
  s_c__UTM_Term__c string [note: 'The utm-term parameter specified in this referral']
  s_c__UTM_Token__c string [note: 'The utm-token parameter specified in this referral']
  s_c__Visited_At__c datetime [not null, note: 'The date and time of this visit']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Order_Items_Taxes__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, not null, note: 'Select a OrderItem to link with the Tax']
  s_c__Tax_Amount__c currency [note: 'This is the amount of tax calculated for this OrderItem and Tax']
  s_c__Tax_Id__c integer [ref: > StoreConnect.s_c__Tax__c.Id, not null, note: 'Select a Tax to link with the OrderItem']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Outlet_Stock_Location__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Outlet_Id__c integer [ref: > StoreConnect.s_c__Outlet__c.Id, not null, note: 'Select an Outlet to link with the Stock Location']
  s_c__Stock_Location_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null, note: 'Select a Stock Location to link with the Outlet']
}



Table StoreConnect.s_c__Outlet_User_Type__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Maximum_Discount_Percentage__c double [note: 'The maximum discount that can be applied to a POS Order,         Note Product.Minimum_Sell_Price__c will take precidence.         If set to zero the user is unable to apply any discount']
}



Table StoreConnect.s_c__Outlet_User__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether the User has active access to the Outlet.']
  s_c__Outlet_Id__c integer [ref: > StoreConnect.s_c__Outlet__c.Id, not null, note: 'Select an Outlet to link with the User']
  s_c__Outlet_User_Type_Id__c integer [ref: > StoreConnect.s_c__Outlet_User_Type__c.Id, note: 'Select an Outlet User Type to link with the User']
  s_c__User_Id__c integer [ref: > Standard.User.Id, note: 'Select a User to link with the Outlet']
}



Table StoreConnect.s_c__Outlet__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Anonymous_Checkout_Contact_Id__c integer [ref: > Standard.Contact.Id, note: 'The Contact to associate with anonymous Orders']
  s_c__Register_Code__c string [note: 'A secret passphrase used to connect Registers to this Outlet. Recommended to be 3 or more words separated by hyphens']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__Quicklist_Product_Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, note: 'The Product Category that POS devices on this Outlet will display on the main screen']
  s_c__Address1__c string 
  s_c__Address2__c string 
  s_c__City__c string 
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id]
  s_c__Phone__c phone 
  s_c__State__c string 
  s_c__Tax_Number__c string [note: 'Tax number associated with this Outlet']
  s_c__Zip_Code__c string 
}



Table StoreConnect.s_c__Page_Tag__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, note: 'Select the Page for this Page Tag']
  s_c__Position__c double [note: 'Set the display order position for this Page Tag']
  s_c__Tag_Id__c integer [ref: > StoreConnect.s_c__Tag__c.Id, not null, note: 'Select the Tag for this Page Tag']
}



Table StoreConnect.s_c__Page__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Body_Markdown__c textarea [note: 'Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Hide__c boolean [not null, note: 'Hide this page from showing in the navigation bar or footer']
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the page']
  s_c__Meta_Keywords__c string [note: 'The content that appears within the meta keywords tag in the HEAD tag of the page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the page']
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id]
  s_c__Path__c string [not null, note: 'The path at which this page can be found (unique per store).']
  s_c__Position__c double [note: 'Sets the position of this page within its parent page']
  s_c__Require_Login__c boolean [not null, note: 'Require users to be logged in order to access this page.']
  s_c__Slug__c string [unique, note: 'A globally unique identifier for this page.']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Page is shared on Social Media. If not provided, will use the Pages first image']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__Subtitle__c string 
  s_c__Title__c string 
  s_c__Unique_Store_Path__c string [unique]
  s_c__Visible__c boolean [not null, note: 'If false this page will not be able to be viewed on the site at all']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Preview_On_Site__c string 
  s_c__Search_Keywords__c textarea [note: 'Line-separated list of keywords to improve relevance in page search results']
}



Table StoreConnect.s_c__Payment_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Amount__c currency [note: 'The amount of this payment item']
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: 'The order item associated to this payment item.']
  s_c__Payment_Id__c integer [ref: > StoreConnect.s_c__Payment__c.Id, note: 'The payment associated to this item']
  s_c__Points__c double [note: 'The points amount of this Payment Item']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Payment_Provider__c.s_c__Provider__c_picklist {
    "AuthorizeNet"
    "Bambora"
    "Braintree"
    "eWAY"
    "Free"
    "PayByAccount"
    "PayLater"
    "PayPal"
    "SecurePay"
    "Square"
    "Stripe"
    "StripeAch"
    "Windcave"
    "Zip Pay"
}

Table StoreConnect.s_c__Payment_Provider__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'If enabled this Payment Provider will appear as an option in the Store checkout. If disabled it will not appear in the checkout']
  s_c__Api_Key__c string [note: 'The API key for the payment providers API.']
  s_c__Api_Mode__c string [not null, note: 'The mode of the payment providers API to use, e.g. "test", "live", etc.']
  s_c__Api_Options__c textarea [note: 'Additional API Options required for your payment gateway per the help documentation']
  s_c__Api_Secret__c string [not null, note: 'The API secret key for the payment providers API.']
  s_c__Description__c textarea [note: 'Description to show on the checkout payment selection page when this payment provider is selected.']
  s_c__Display_Name__c string [note: 'The name of the payment provider that you want to show up on the available payment providers list on the website.']
  s_c__Payment_Instructions_Markdown__c textarea [note: 'Payment Instruction to show on the order summary page when this payment provider is used.       Use Markdown or HTML to format your text. Find out more at       https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Position__c double [note: 'The position of this payment provider, lower numbers are shown first, any providers without a position are ordered by name']
  s_c__Provider__c s_c__Payment_Provider__c.s_c__Provider__c_picklist [not null, note: 'The payment provider, e.g. Stripe, PayPal, etc.']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The store that this payment provider belongs to.']
  s_c__Surcharge_Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Surcharge Product is used to add a surcharge to the order total during checkout if set.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Payment__c.s_c__Status__c_picklist {
    "failed"
    "pending"
    "success"
}

Table StoreConnect.s_c__Payment__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Amount__c currency [note: 'The amount of this Payment including any surcharges']
  s_c__Invoice_Reference__c string [note: 'Optional reference to the invoice for this Payment. Not used by StoreConnect']
  s_c__Invoice_Url__c string [note: 'Optional URL of the invoice for this Payment. Not used by StoreConnect.']
  s_c__Method__c string [note: 'The name of the Payment_Provider__c that created this Payment (e.g. "Stripe")']
  s_c__Order_Id__c integer [ref: > Standard.Order.Id, note: 'Reference to the Order for which this Payment was created']
  s_c__Paid_At__c datetime [note: 'The date and time this Payment was successfully completed']
  s_c__Payment_Provider_Id__c integer [ref: > StoreConnect.s_c__Payment_Provider__c.Id, note: 'The Payment_Provider__c used to process this Payment']
  s_c__Points_Amount__c double [note: 'The points amount of this Payment including any surcharges']
  s_c__Response__c string [note: '[Internal Use] Response returned by the Payment_Provider__c']
  s_c__Status__c s_c__Payment__c.s_c__Status__c_picklist [note: 'Status of the payment record']
  s_c__Surcharge_Amount__c currency [note: 'The amount of the surcharge for this payment, calculated against the Surcharge Product of the payment provider. This is included within the total amount.']
  s_c__Surcharge_Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Surcharge Product for the surcharge']
  s_c__Transaction_Number__c string [note: 'Transaction number returned by the Payment_Provider__c']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  ViaPOS__c boolean [not null]
}



Table StoreConnect.s_c__Permitted_Restricted_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Permitted_Restricted_Product_Id__c integer [ref: > StoreConnect.s_c__Permitted_Restricted_Product__c.Id, not null]
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id]
  s_c__Quantity__c double [not null, note: 'Full or partial quantity of the order product approved for purchase. Partial quantity refers to multiple permits used for approval.']
  s_c__Void__c boolean [not null, note: 'Determines whether the order product quantity is no longer valid due to order cancellation or removal of the order product. Quantity will be reinstated for purchase.']
  s_c__Order_Number__c string 
  s_c__Order_Status__c string 
}



Table StoreConnect.s_c__Permitted_Restricted_Product__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id]
  s_c__Approved_From__c datetime 
  s_c__Approved_Quantity__c double [note: 'How many items of the product a buyer is allowed to purchase. If a number has not been set or set to 0, Unlimited should be checked.']
  s_c__Approved_Until__c datetime 
  s_c__Product_Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id]
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Purchased_Quantity__c double [note: 'The number of items of this product purchased by this buyer (Account).  Based on the quantity sum of all non-voided permitted restricted items.']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id]
  s_c__Unlimited__c boolean [not null, note: 'If checked, a buyer is allowed to purchase an unlimited number of items of the product.']
  s_c__Total_Item_Quantity__c double 
  s_c__Is_Valid_Approval__c boolean [not null]
}



Table StoreConnect.s_c__Postcode__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id, not null, note: 'The Country that this Postcode belongs to.']
  s_c__Code__c string [not null, note: 'Postal or ZIP code, e.g. "2000", "90210", "SW1W 0NY", etc.']
  s_c__State_Id__c integer [ref: > StoreConnect.s_c__State__c.Id, note: 'The State, Region, Territory or Province that this Postcode belongs to.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Printable_Label__c.s_c__DPI__c_picklist {
    "152"
    "203"
    "300"
    "600"
}
Enum s_c__Printable_Label__c.s_c__Size_Unit__c_picklist {
    "millimetre"
    "inch"
}
Enum s_c__Printable_Label__c.s_c__Type__c_picklist {
    "product"
}
Enum s_c__Printable_Label__c.s_c__Printer_Type__c_picklist {
    "receipt"
    "label"
}

Table StoreConnect.s_c__Printable_Label__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether this Label is available to use']
  s_c__DPI__c s_c__Printable_Label__c.s_c__DPI__c_picklist [note: 'The resolution (in DPI) used when generating the label for print']
  s_c__Height__c double [note: 'The height of the label']
  s_c__Label_Template__c textarea [note: 'The label template in format supported by your printer, eg ZPL, EPL.']
  s_c__Size_Unit__c s_c__Printable_Label__c.s_c__Size_Unit__c_picklist [note: 'The unit of measure of the height and width of this label']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The Store that this label is available in']
  s_c__Type__c s_c__Printable_Label__c.s_c__Type__c_picklist [note: 'The type of object this label will be used for']
  s_c__Width__c double [note: 'The width of this label']
  s_c__Printer_Type__c s_c__Printable_Label__c.s_c__Printer_Type__c_picklist [note: 'The type of printer this template should be printed on']
}



Table StoreConnect.s_c__Product_Bookable_Location__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Bookable_Location_Id__c integer [ref: > StoreConnect.s_c__Bookable_Location__c.Id, not null]
  s_c__Max_Bookings__c double [note: 'The maximum number of Bookings that can be made for this Booking Product at this Location']
  s_c__Min_Bookings__c double [note: 'The minimum number of Bookings required for this Booking Product at this Location']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your store.']
}



Table StoreConnect.s_c__Product_Category_Hierarchy__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Child_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null]
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null]
  s_c__Position__c double [note: 'The position of this Category in relation to other Categories of the same parent. Any categories with an empty position will be ordered last alphabetically']
  s_c__Primary_Parent__c boolean [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Product_Category__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Child_Count__c double [note: 'This is updated automatically to show the number of product categorys that belong to this product category']
  s_c__Display_Name__c string [note: 'Used in auto generated navigation bars and breadcrumbs instead of Name if present']
  s_c__Google_Product_Category__c string [note: 'The Google Product Category for this category. Ensure the category number is         at the start of the field, such as "2 - Animals & Pet Supplies > Pet Supplies"']
  s_c__Hide__c boolean [not null, note: 'Hide this category from showing in the navigation bar']
  s_c__Import_ID__c string 
  s_c__Information_Markdown__c textarea [note: 'Information to display after all the products of a category page.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Introduction_Markdown__c textarea [note: 'Information to display before all the products on a category page.     Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Media_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The image to use for the category when featured']
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the page']
  s_c__Meta_Keywords__c string [note: 'The content that appears within the meta keywords tag in the HEAD tag of the page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the page']
  s_c__Parent_Count__c double [note: 'This is updated automatically to show the number of product categorys that this product category belongs to.']
  s_c__Path__c string [note: 'Specifies the relative path where the category will be accessible in the store']
  s_c__Position__c double 
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The primary / featured product for the category']
  s_c__Slug__c string [unique, note: '[Deprecated] Please use Path instead']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Category is shared on Social Media. If not provided, will use the Categorys first image']
  s_c__Subtitle__c string [note: 'Appears at the top of the category page under the title.']
  s_c__Taxonomy_Id__c integer [ref: > StoreConnect.s_c__Taxonomy__c.Id, not null]
  s_c__Title__c string [note: 'Appears at the top of the category page in place of the name if defined.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Product_Delivery_Window__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active_From__c datetime [note: 'The starting date/time this Product Delivery Window is enabled']
  s_c__Active_To__c datetime [note: 'The ending date/time this Product Delivery Window is enabled']
  s_c__Delivery_Window_Id__c integer [ref: > StoreConnect.s_c__Delivery_Window__c.Id, note: 'The Delivery Window associated with this Product Delivery Window']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The Product associated with this Product Delivery Window']
}



Table StoreConnect.s_c__Product_Form__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Form_Id__c integer [ref: > StoreConnect.s_c__Form__c.Id, note: 'The form associated to this product']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The product associated to this form']
}


Enum s_c__Product_Media__c.s_c__Category__c_picklist {
    "manuals"
}

Table StoreConnect.s_c__Product_Media__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Media_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, not null]
  s_c__Category__c s_c__Product_Media__c.s_c__Category__c_picklist 
  s_c__Position__c double [note: 'Lower numbers are shown first, records without numbers are sorted alphabetically by name.']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Thumbnail_Preview__c string 
}



Table StoreConnect.s_c__Product_Purchasable_Media__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Media_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, not null, note: 'The media that can be downloaded when the product linked to this has been purchased']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The product that this purchasable media is linked to, so that the Media can be downloaded once this product is purchased']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Product_Supplier__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, not null]
  s_c__Landed_Cost__c double [note: 'Defines the total landed costs price (including shipping and other costs blended across all previous orders) from this supplier']
  s_c__Minimum_Order_Quantity__c double [note: 'Specifies the minimum quantity of this product that can be ordered from this supplier']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Purchase_Price__c double [note: 'Defines the unit cost price of this item from this supplier']
  s_c__Units_Of_Measure__c double [note: 'Specifies quantity multiple used for ordering. For example, if a product needs to be ordered in multiples of 50, then this field should be 50']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Supplier_Phone__c string 
}



Table StoreConnect.s_c__Product_Tag__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Position__c double [note: 'Set the display order position for this Product Tag']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Select the Product for this Product Tag']
  s_c__Tag_Id__c integer [ref: > StoreConnect.s_c__Tag__c.Id, not null, note: 'Select the Tag for this Product Tag']
}



Table StoreConnect.s_c__Product_Tax_Group__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Select a Product to link with the Tax Group']
  s_c__Tax_Group_Id__c integer [ref: > StoreConnect.s_c__Tax_Group__c.Id, not null, note: 'Select a Tax Group to link with the Product']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Product_Tax__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Select a Product to link with the Tax']
  s_c__Tax_Id__c integer [ref: > StoreConnect.s_c__Tax__c.Id, not null, note: 'Select a Tax to link with the Product']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Product_Trait_Template_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Product_Trait_Template_Id__c integer [ref: > StoreConnect.s_c__Product_Trait_Template__c.Id]
  s_c__Trait_Category_Id__c integer [ref: > StoreConnect.s_c__Trait_Category__c.Id]
  s_c__Trait_Type_Id__c integer [ref: > StoreConnect.s_c__Trait_Type__c.Id]
  s_c__Trait_Value_Id__c integer [ref: > StoreConnect.s_c__Trait_Value__c.Id]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Product_Trait_Template__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Product_Variant__c.s_c__Variant_Type__c_picklist {
    "option"
    "capacity"
    "colour"
    "length"
    "size"
    "version"
    "weight"
    "Flavour"
    "Plan"
    "Recurrence"
    "Membership"
}

Table StoreConnect.s_c__Product_Variant__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Master_Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The master product the variant is grouped under']
  s_c__Position__c double [note: 'The position of the value in relation to other values for this variant type']
  s_c__Variant_Label__c string [note: 'The UI selector text, such as Red, Green, Blue, Small, Medium or Large etc. if different from Variant Value']
  s_c__Variant_Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The product represented by this variant option']
  s_c__Variant_Type__c s_c__Product_Variant__c.s_c__Variant_Type__c_picklist [not null, note: 'The variants grouping type. i.e. Size, Colour etc.']
  s_c__Variant_Value__c string [not null, note: 'The underlying value of the variant, such as Red or #FF0000, Small or SML']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Products_Product_Categories__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'Determines whether the related Product is active on the related Product Category']
  s_c__Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null, note: 'A Lookup to the Category related to the given Product']
  s_c__Position__c double [note: 'The position of this Product in relation to all Products in this Category. Lower numbers are shown first']
  s_c__Primary__c boolean [not null, note: 'Determines whether the Category is the Primary Category for the given Product']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Category_Name__c string [note: 'Formula field that displays the Category name for related lists']
  s_c__Product_Name__c string [note: 'Formula field that displays the Product name for related lists']
  s_c__Taxonomy_Name__c string [note: 'Formula field that displays the Taxonomy name for related lists']
}


Enum s_c__Promotion_Action__c.s_c__Action__c_picklist {
    "apply_per_item"
    "apply_per_order"
    "buy_one_get_another_at_discount"
    "apply_free_shipping"
    "apply_discount_shipping"
}
Enum s_c__Promotion_Action__c.s_c__Calculation__c_picklist {
    "percentage"
    "flat_rate"
}

Table StoreConnect.s_c__Promotion_Action__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Promotion_Id__c integer [ref: > StoreConnect.s_c__Promotion__c.Id, not null]
  s_c__Action__c s_c__Promotion_Action__c.s_c__Action__c_picklist [not null]
  s_c__Calculation__c s_c__Promotion_Action__c.s_c__Calculation__c_picklist [not null]
  s_c__Discount_Percent__c percent [note: 'The percentage to apply as a discount']
  s_c__Discount_Value__c currency [note: 'The fixed amount to apply as a discount']
  s_c__Qualifying_Quantity__c double [note: 'The number of items a user needs to purchase before the discount is applied']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Discount_Value_Points__c double [note: 'The fixed amount of points to apply as a discount']
}


Enum s_c__Promotion_Credit__c.s_c__Action__c_picklist {
    "apply_per_order"
    "apply_per_item"
    "buy_one_get_another_at_discount"
    "apply_free_shipping"
    "apply_discount_shipping"
}
Enum s_c__Promotion_Credit__c.s_c__Calculation__c_picklist {
    "percentage"
    "flat_rate"
}

Table StoreConnect.s_c__Promotion_Credit__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Action__c s_c__Promotion_Credit__c.s_c__Action__c_picklist [not null, note: 'A record of how the promotion was applied to the shopping cart']
  s_c__Calculation__c s_c__Promotion_Credit__c.s_c__Calculation__c_picklist [not null, note: 'A record of what calculation was used for the promotion on the shopping cart']
  s_c__Credit_Value__c currency [not null, note: 'The calculated credit value applied to the order as a result of applying this promotion action']
  s_c__Discount_Percent__c percent [note: 'The percent value used in the promotion']
  s_c__Discount_Value__c currency [note: 'The fixed amount used in the promotion']
  s_c__Order_Id__c integer [ref: > Standard.Order.Id]
  s_c__Promo_Code_Used__c string [not null]
  s_c__Promotion_Action_Id__c integer [ref: > StoreConnect.s_c__Promotion_Action__c.Id, not null]
  s_c__Promotion_Id__c integer [ref: > StoreConnect.s_c__Promotion__c.Id, not null]
  s_c__Qualifying_Quantity__c double [note: 'The number of items a user purchased for the discount to apply.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Credit_Value_Points__c double [note: 'The calculated credit value in points applied to the order as a result of applying this promotion action']
  s_c__Discount_Value_Points__c double [note: 'The fixed amount in points used in the promotion']
}



Table StoreConnect.s_c__Promotion_Scope__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Promotion_Id__c integer [ref: > StoreConnect.s_c__Promotion__c.Id, not null]
  s_c__Account_Id__c integer [ref: > Standard.Account.Id, note: 'What account is eligible to use this promotion']
  s_c__Brand_Id__c integer [ref: > Standard.Account.Id, note: 'The product brand that this promotion applies to']
  s_c__Category_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, note: 'Products belonging to this category and its subcategories are included in this promotion']
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id]
  s_c__Membership_Id__c integer [ref: > StoreConnect.s_c__Membership__c.Id, note: 'Members can us the promo code for this Promotion']
  s_c__Pricebook_Id__c integer [ref: > Standard.Pricebook2.Id, note: 'Any product using the selected pricebook is included in this promotion']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Selecting a master product also includes its variants in this promotion']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Promotion__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Advertise__c boolean [not null, note: '[Future use] Include this promotion to the Advertised Promotions collection in liquid']
  s_c__Campaign_Id__c integer [ref: > Standard.Campaign.Id]
  s_c__Description__c textarea [note: 'Internal description of this promotion.']
  s_c__Expires_At__c datetime 
  s_c__Path__c string 
  s_c__Promotion_Code__c string [not null, note: 'The promotion code that will be entered by the shopper during checkout in order to use this promotion.']
  s_c__Starts_At__c datetime 
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__Unique_Promotion_Code_Store__c string [unique]
  s_c__Usage_Limit__c double 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Register_Shift_Total__c.s_c__Method__c_picklist {
    "bank"
    "card"
    "cash"
    "cheque"
}

Table StoreConnect.s_c__Register_Shift_Total__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Register_Shift_Id__c integer [ref: > StoreConnect.s_c__Register_Shift__c.Id, not null]
  s_c__Amount__c currency [note: 'The total of payments at the end of the shift']
  s_c__Method__c s_c__Register_Shift_Total__c.s_c__Method__c_picklist [note: 'The name of the Payment method (e.g. "CASH")']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Register_Shift_User__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Register_Shift_Id__c integer [ref: > StoreConnect.s_c__Register_Shift__c.Id, not null, note: 'Select a Register Shift to link with the User']
  s_c__User_Id__c integer [ref: > Standard.User.Id, note: 'Select a User to link with the RegisterShift']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Register_Shift__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__End_Balance__c currency 
  s_c__Ended_At__c datetime [note: 'The time this Shift ended']
  s_c__Register_Id__c integer [ref: > StoreConnect.s_c__Register__c.Id, not null]
  s_c__Start_Balance__c currency 
  s_c__Started_At__c datetime [note: 'The time this Shift started']
  s_c__User_Id__c integer [ref: > Standard.User.Id]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Register__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether this Register can be selected by the POS system']
  s_c__Connected__c boolean [not null, note: 'If enabled, this Register has been connected to a device']
  s_c__Outlet_Id__c integer [ref: > StoreConnect.s_c__Outlet__c.Id, not null]
}



Table StoreConnect.s_c__Related_Article__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Child_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, not null]
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Article__c.Id, not null]
  s_c__Position__c double [note: 'Enter the position as a number of this Article in relation to other Articles of the same parent. Any articles with an empty postion will be ordered last alphabetically.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Related_Page__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Child_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, not null]
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, not null]
  s_c__Position__c double [note: 'Enter the position as a number of this Page in relation to other Pages of the same parent. Any pages with an empty postion will be ordered last alphabetically.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Related_Product_Category__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Child_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null]
  s_c__Parent_Id__c integer [ref: > StoreConnect.s_c__Product_Category__c.Id, not null]
  s_c__Position__c double [note: 'The position of this Category in relation to other Categories of the same parent. Any categories with an empty postion will be ordered last alphabetically']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Related_Product__c.s_c__Sub_Type__c_picklist {
    "electrical"
    "mechanical"
}
Enum s_c__Related_Product__c.s_c__Type__c_picklist {
    "cross-sell"
    "spare-part"
    "consumable"
    "accessory"
}

Table StoreConnect.s_c__Related_Product__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Child_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Code__c string [note: 'Any code that is part of the relationship between the product and the related product']
  s_c__Parent_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Position__c double [note: 'Enter the position of this product in relation to other products related to the same parent. Any related products with an empty position will be ordered last, alphabetically']
  s_c__Sub_Type__c s_c__Related_Product__c.s_c__Sub_Type__c_picklist [note: 'Choose the sub relationship of this related product']
  s_c__Type__c s_c__Related_Product__c.s_c__Type__c_picklist [note: 'Choose the type of the relationship for this related product']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Route_Mapping__c.s_c__Status_Code__c_picklist {
    "301"
    "302"
    "rewrite"
}

Table StoreConnect.s_c__Route_Mapping__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__From__c string 
  s_c__Status_Code__c s_c__Route_Mapping__c.s_c__Status_Code__c_picklist [not null]
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'Store where the route belongs']
  s_c__To__c string 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__sObject_Type__c string [note: 'Please ensure this field is populated with API names of sObjects only']
}



Table StoreConnect.s_c__Script_Block__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether the Script Block is active. Only active Script Blocks will be included on the website']
  s_c__Content__c textarea [note: 'The JavaScript code of the Script Block, without any <script> tags']
  s_c__Global__c boolean [not null, note: 'Defines whether the Script Block is automatically included on the website. If checked, this script will automatically be included.']
  s_c__Position__c double [note: 'This defines the display order of the Script Blocks on the website. Lower numbers appear first. Only applies then Global is checked']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The Store that the Script Block belongs to']
  s_c__Url__c url [note: 'The complete URL of an external Javascript file to be included. If a value is specified, any value in Content will be ignored. Example: https://example.com/script.js']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}



Table StoreConnect.s_c__Setup_Configuration__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Text__c string 
}


Enum s_c__Shipment__c.s_c__State__c_picklist {
    "waiting_for_packing"
    "ready_to_ship"
    "waiting_for_pick_up"
    "shipped"
    "error"
    "requested"
    "picked"
    "packed"
    "complete"
    "delivered"
    "out_of_stock"
    "ordered"
    "received"
    "missing"
    "ready_for_pickup"
}
Enum s_c__Shipment__c.s_c__Fulfillment_Type__c_picklist {
    "takeaway"
    "delivery"
    "pickup"
    "hold"
    "transfer"
    "special_order"
}

Table StoreConnect.s_c__Shipment__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Charge__c currency [note: 'The amount the customer was charged for this Shipment']
  s_c__Cost__c currency [note: 'The cost to send this Shipment if provided by a Shipping_Provider__c']
  s_c__Errors__c textarea [note: 'Any errors that occurred when the system     attempted to lodge a Shipment with an external Shipping_Provider__c']
  s_c__Order_Id__c integer [ref: > Standard.Order.Id, not null, note: 'The Order to which this Shipment belongs']
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: '[DEPRECATED] Shipments now belong to Orders. See Order_Id__c']
  s_c__Provider_Service__c string [note: 'The service identifier for the Shipping_Provider__c']
  s_c__Provider_Shipment_Id__c string [note: 'The Shipping_Provider__cs ID for this Shipment or the Salesforce Record ID of the Shipping_Rate__c that was used to create this Shipment']
  s_c__Provider__c string [note: 'The name of the Shipping_Provider__c for this Shipment, such as "Australia Post"']
  s_c__State_Changed_At__c datetime [note: 'The date and time the State last changed for this Shipment record']
  s_c__State__c s_c__Shipment__c.s_c__State__c_picklist [note: 'The current status of this Shipment']
  s_c__Status__c string [note: '[DEPRECATED] This is replaced by the `State__c` field.']
  s_c__Stock_Location_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null, note: 'The Stock_location__c from which the item will be shipped']
  s_c__Tracking_Code__c string [note: 'The tracking code for this Shipment from the Shipping_Provider__c (if any)']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Destination_Outlet_Id__c integer [ref: > StoreConnect.s_c__Outlet__c.Id, note: 'The Outlet this Shipment is going to (if any)']
  s_c__Fulfillment_Type__c s_c__Shipment__c.s_c__Fulfillment_Type__c_picklist [note: 'The fulfillment type of this Shipment']
  s_c__Notes__c textarea [note: 'Holds any notes related to this Shipment']
  s_c__Source_Outlet_Id__c integer [ref: > StoreConnect.s_c__Outlet__c.Id, note: 'The Outlet this Shipment is leaving from (if any)']
}


Enum s_c__Shipping_Provider__c.s_c__Provider__c_picklist {
    "Australia Post"
    "StarTrack"
}

Table StoreConnect.s_c__Shipping_Provider__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Account__c string [note: 'The account number of the shipping provider to use, if any.']
  s_c__Api_Environment__c string [note: 'The environment of the shipping providers API to use, if any.']
  s_c__Api_Key__c string [not null, note: 'The API key for the shipping providers API.']
  s_c__Api_Secret__c string [not null, note: 'The API secret key for the shipping providers API.']
  s_c__Api_Url__c string [not null, note: 'The URL of the shipping providers API.']
  s_c__Instructions_Markdown__c textarea [note: '(Optional) Instruction to show on the checkout shipping selection page when this shipping provider is an option.       Use Markdown or HTML to format your text. Find out more at       https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Provider__c s_c__Shipping_Provider__c.s_c__Provider__c_picklist [not null, note: 'The shipping provider, e.g. Australia Post.']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The store that this shipping provider belongs to.']
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'The geographic zone that this record relates to, e.g. a country, state, postcode or collection thereof']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Active__c boolean [not null, note: 'Only active Shipping Providers are available to use at the checkout']
  s_c__Api_Options__c textarea [note: 'Additional API Options required for your shipping provider per the help documentation']
}


Enum s_c__Shipping_Rate__c.s_c__Method__c_picklist {
    "Regular Post"
    "Express Post"
    "International"
}
Enum s_c__Shipping_Rate__c.s_c__Order_Total_Range_Type__c_picklist {
    "price"
    "weight"
    "mixed"
}
Enum s_c__Shipping_Rate__c.s_c__Order_Total_Range_Unit__c_picklist {
    "dollar"
    "kilogram"
}

Table StoreConnect.s_c__Shipping_Rate__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Cost__c currency [not null, note: 'Cost of shipping for the specified range']
  s_c__Display_Name__c string [note: 'The name shown to the customer, if blank, the name of the Shipping Rate is used instead']
  s_c__Instructions_Markdown__c textarea [note: '(Optional) Instruction to show on the checkout shipping selection page when this shipping rate is an option.       Use Markdown or HTML to format your text. Find out more at       https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Method__c s_c__Shipping_Rate__c.s_c__Method__c_picklist [not null, note: 'The method of this shipping rate, used in relation to the shipping method picklist on each product']
  s_c__Order_Price_Maximum__c currency [note: 'The upper bound of the range of the order total amount for which this rate applies (or empty for an open-ended range)']
  s_c__Order_Price_Minimum__c currency [note: 'The lower bound of the range of the order total amount for which this rate applies (at least $0)']
  s_c__Order_Total_Range_Type__c s_c__Shipping_Rate__c.s_c__Order_Total_Range_Type__c_picklist [not null, note: 'Specifies whether this custom shipping rate record should apply to a cart/order by price or weight.']
  s_c__Order_Total_Range_Unit__c s_c__Shipping_Rate__c.s_c__Order_Total_Range_Unit__c_picklist [not null, note: 'Specifies the unit used for the Order Total Range Minimum and Maximum.']
  s_c__Order_Weight_Maximum__c double [note: 'The upper bound of the range of the order total weight for which this rate applies (or empty for an open-ended range)']
  s_c__Order_Weight_Minimum__c double [note: 'The lower bound of the range of the order total weight for which this rate applies']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The store that this shipping rate belongs to.']
  s_c__Unit_Cost_Amount__c currency [note: 'Additional per unit cost of the shipping. This multiplied by the Unit Quantity is added to the cost to determine the price for a user.']
  s_c__Unit_Cost__c double [note: '[Deprecated] Use Unit_Cost_Amount__c']
  s_c__Unit_Quantity__c double [note: 'The unit quantity used to calculate additional shipping charges with Unit Cost Amount. For example, 1 for one kilogram.']
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'The geographic zone that this record relates to, e.g. a country, state, postcode or collection thereof']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__State__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id, not null, note: 'The Country that this State belongs to']
  s_c__Code__c string [not null, note: 'Two or three letter state or province code used in the selected country, e.g. "Vic" or "TX"']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Stock_Adjustment__c.s_c__Type__c_picklist {
    "Initial Inventory"
    "Stock Take Adjustment"
    "Transfer Created"
    "Transfer Received"
    "Shipped To Customer"
    "Returned From Customer"
    "Received From Supplier"
    "Returned To Supplier"
    "Inventory Added"
    "Inventory Removed"
}

Table StoreConnect.s_c__Stock_Adjustment__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Amount__c double [not null, note: 'Quantity changed for the stock adjustment']
  s_c__Date__c datetime [not null, note: 'Date when the stock adjustment occurred']
  s_c__Stock_Level_Id__c integer [ref: > StoreConnect.s_c__Stock_Level__c.Id, not null, note: 'Stock level that is affected by the stock adjustment']
  s_c__Stock_Transfer_Item_Id__c integer [ref: > StoreConnect.s_c__Stock_Transfer_Item__c.Id, note: 'Stock transfer item that caused the stock adjustment']
  s_c__Type__c s_c__Stock_Adjustment__c.s_c__Type__c_picklist [not null, note: 'Type of event that caused the stock level quantity to change']
}



Table StoreConnect.s_c__Stock_Level__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Stock_Location_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null]
  s_c__Available_To_Sell__c double [note: 'How many units are available to sell']
  s_c__Backorderable__c boolean [not null, note: 'Allow your customers to keep ordering this item if available to sell is less than one']
  s_c__Change_Quantity__c double [note: 'Add/Subtract the provided amount on this field to the count on hand.']
  s_c__Count_On_Hand__c double [note: 'How many units of this item are physically at the location (includes units picked but not shipped)']
  s_c__Fulfill_Online_Orders__c boolean [not null, note: 'Enable to allow this stock level to be used for online ordering from your webstore.']
  s_c__Hide_From_Search__c boolean [not null, note: 'Hide this stock level from the search results']
  s_c__Last_Inventory_Count__c double [note: 'How many items were there at the Last Inventory date']
  s_c__Last_Inventory_Date__c date [note: 'What was the Last Inventory stock take']
  s_c__Minimum_Stock_Reorder_Level__c double [note: 'Defines the desired amount of stock that should be kept on hand at all times']
  s_c__Out_Of_Stock_Level__c double [note: 'The stock level at which the item is considered as out of stock within the online store']
  s_c__Priority__c boolean [not null, note: 'When enabled, orders for this product will be fullfilled from this location first. Enabling this will disable any other location from being the priority for this product.']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Set_Quantity__c double [note: 'Set the count on hand to the number specified on this field.']
  s_c__Unique_Product_Stock_Location__c string [unique]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Stock_Location__c.s_c__Online_Fulfillment_Options__c_picklist {
    "no_online_fulfillment"
    "shipping_only"
    "click_and_collect_only"
    "shipping_with_click_and_collect"
}

Table StoreConnect.s_c__Stock_Location__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null]
  s_c__Address1__c string 
  s_c__Address2__c string 
  s_c__Backorderable_Default__c boolean [not null, note: 'Is this stock location able to sell products with no available stock by default for new stock levels?']
  s_c__City__c string 
  s_c__Click_And_Collect_Allowed__c boolean [not null, note: '[DEPRECATED] Use Online_Fulfillment_Options__c instead']
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id, note: 'The country where the stock location is located']
  s_c__Days_To_Restock__c double [note: 'How many days it will take to restock this location from another location so a customer can collect their order?']
  s_c__Default__c boolean [not null]
  s_c__Display_Name__c string 
  s_c__Fulfill_Online_Orders__c boolean [not null, note: '[DEPRECATED] Use Online_Fulfillment_Options__c instead']
  s_c__Geolocation__Latitude__s double 
  s_c__Geolocation__Longitude__s double 
  s_c__Geolocation__c location 
  s_c__Hide_From_Search__c boolean [not null, note: 'Does this stock location hide its stock from the store by default for new stock levels?']
  s_c__Media_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Online_Fulfillment_Options__c s_c__Stock_Location__c.s_c__Online_Fulfillment_Options__c_picklist [note: 'Determines how the stock location behaves for online orders']
  s_c__Phone__c phone 
  s_c__Priority__c boolean [not null, note: 'Is this stock location the priority location to ship from by default for new stock levels? Only one stock location can have this set as TRUE.']
  s_c__Propagate_All_Variants__c boolean [not null, note: 'Will create a stock level at this stock location for any new product. Will also create one for an edited product if one doesnt already exist.']
  s_c__Require_Stock_For_Pickup__c boolean [not null, note: 'Requires stock to be available at this location for click and collect to be offered at checkout.']
  s_c__State__c string 
  s_c__Stock_Import_Filename__c string 
  s_c__Stock_Import_Id__c string 
  s_c__Stock_Import_Last_Completed_At__c datetime 
  s_c__Stock_Import_Last_Started_At__c datetime 
  s_c__Website__c string 
  s_c__Zip_Code__c string 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Stock_Transfer_Item__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Stock_Transfer_Id__c integer [ref: > StoreConnect.s_c__Stock_Transfer__c.Id, not null, note: 'Stock Transfer from which the item belongs to']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'Product being transferred or received']
  s_c__Quantity_Received__c double [note: 'Amount of product received and accepted from origin to destination']
  s_c__Quantity_Sent__c double [not null, note: 'Amount of products sent from origin to destination']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Stock_Transfer__c.s_c__Status__c_picklist {
    "ready"
    "in_transit"
    "received"
}

Table StoreConnect.s_c__Stock_Transfer__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Arrival_Date__c date [note: 'Date the transfer is expected to arrive']
  s_c__Description__c textarea [note: 'Description of the stock transfer']
  s_c__Destination_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null, note: 'Destination stock location of the transfer']
  s_c__Origin_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null, note: 'Origin stock location of the transfer']
  s_c__Received_Date__c date [note: 'Date on when the transfer actually arrived']
  s_c__Reference__c string [note: 'Reference details for transfer']
  s_c__Status__c s_c__Stock_Transfer__c.s_c__Status__c_picklist [not null, note: 'Current status of the transfer']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Store_Campaign__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Campaign_Id__c integer [ref: > Standard.Campaign.Id, not null, note: 'The campaign which this asociaton belongs to']
  s_c__Information_Markdown__c textarea [note: 'Information to show the customer when signing up to this campaign, for example linking to privacy policy etc.       Use Markdown or HTML to format your text. Find out more at https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Opt_In_Text__c string [note: 'The text shown to the customer for them to agree to sign up to.']
  s_c__Preselect_Opt_In__c boolean [not null, note: 'If true, then the checkbox to sign up to the campaign will be preselected.']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The store which this asociaton belongs to']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Store_Form__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'Enable/disable form on the associated store']
  s_c__Form_Id__c integer [ref: > StoreConnect.s_c__Form__c.Id, note: 'The form associated to this store']
  s_c__Position__c double [note: 'Lower numbers are shown first, records without numbers are sorted alphabetically by name']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, note: 'The store associated to this form']
}



Table StoreConnect.s_c__Store_Group__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
}



Table StoreConnect.s_c__Store_Stock_Location__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Priority__c double [note: 'The priority for this stock location to fullfill orders, highest priority first, blank priority last.']
  s_c__Stock_Location_Id__c integer [ref: > StoreConnect.s_c__Stock_Location__c.Id, not null, note: 'The Stock_Location record associated with this Store_Stock_Location']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The Stock record associated with this Store_Stock_Location']
}



Table StoreConnect.s_c__Store_Variable__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The associated Store for this Store Variable.']
  s_c__Available_In_Liquid__c boolean [not null, note: 'Set to true if this StoreVariable should be accessible to liquid code in the Store']
  s_c__Key__c string [not null, note: 'The unique key for accessing this Store Variable.']
  s_c__Unique_Store_Variable_Key__c string [unique, note: 'Do not change this value.']
  s_c__Value__c string [note: 'The Value for this Store Variable.']
}


Enum s_c__Store__c.s_c__Calculate_Stock_By__c_picklist {
    "Inherit from Org"
    "Order Status"
    "Shipment Status"
    "None"
}
Enum s_c__Store__c.s_c__Cash_Rounding_Rule__c_picklist {
    "always_up"
    "nearest_up"
    "always_down"
    "nearest_down"
}
Enum s_c__Store__c.s_c__Currency__c_picklist {
    "AUD"
    "EUR"
    "USD"
}
Enum s_c__Store__c.s_c__Default_Points_Usage__c_picklist {
    "store"
    "store_group"
    "any_store"
}
Enum s_c__Store__c.s_c__Display_Price_In__c_multipicklist {
    "currency"
    "points"
}
Enum s_c__Store__c.s_c__Locale__c_picklist {
    "en"
    "zh_CN"
    "zh_TW"
    "da"
    "nl"
    "fi"
    "fr"
    "de"
    "it"
    "ja"
    "ko"
    "no"
    "pt_BR"
    "ru"
    "es"
    "es_MX"
    "sv"
    "th"
}
Enum s_c__Store__c.s_c__Points_Expiry_Unit__c_picklist {
    "month"
    "week"
}
Enum s_c__Store__c.s_c__Theme__c_picklist {
    "clean"
    "bold"
}
Enum s_c__Store__c.s_c__Voucher_Expiry_Unit__c_picklist {
    "month"
    "week"
}

Table StoreConnect.s_c__Store__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Activate_Points_At_Order_Status__c textarea [note: 'The Order Status at which any points earned from a purchase should be activated. Only activated points can be used for further purchases']
  s_c__Body_Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, note: 'The specified content block will be inserted as is just before the closing BODY tag on every page on the website.']
  s_c__Booking_Hold_Duration__c double [note: 'The number of minutes that bookable Products will be held after being added to the cart']
  s_c__Cache_Version__c string [note: 'Change this field to invalidate the cache within your store.']
  s_c__Calculate_Stock_By__c s_c__Store__c.s_c__Calculate_Stock_By__c_picklist [note: 'Used in conjunction with stock level recalculation process to trigger and calculate stock level Count on Hand and Available to Sell']
  s_c__Cash_Rounding_Rule__c s_c__Store__c.s_c__Cash_Rounding_Rule__c_picklist [note: 'The method to use when rounding cash payments on POS']
  s_c__Cash_Rounding_Unit__c currency [note: 'If set cash payments will be rounded to this unit on POS']
  s_c__Category_Placeholder_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Code__c string 
  s_c__Confirmation_Email_Template__c string [note: 'Enter the API name for the email template to be sent when confirming an email address']
  s_c__Currency__c s_c__Store__c.s_c__Currency__c_picklist 
  s_c__Custom_Styles__c textarea [note: 'Global over-ride of stores styles such as brand colour and background colour etc.']
  s_c__Default_Points_Usage__c s_c__Store__c.s_c__Default_Points_Usage__c_picklist [note: 'Indicates whether the Points created for this Store can be used on other Stores by default']
  s_c__Default__c boolean [not null]
  s_c__Deliver_Vouchers_At_Order_Status__c string [note: 'The Order Status at which Vouchers should be delivered to the customer']
  s_c__Deposit_Amount__c currency [note: 'If set the user will be charged this amount as a deposit during checkout']
  s_c__Deposit_Points__c double [note: 'If set the user will be charged this amount of points as a deposit during checkout']
  s_c__Disable__c boolean [not null, note: 'Turn this on to disable your store and only show a blank page without a header         or footer that will display the optional content block referenced in the         Disabled Content Block field.']
  s_c__Disabled_Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, note: 'Optionally specify a content block you wish to use to show on your     disabled page.']
  s_c__Display_Price_In__c s_c__Store__c.s_c__Display_Price_In__c_multipicklist [note: 'Determines what this Stores prices are shown in']
  s_c__Domain__c url [note: 'The full domain name of your store such as example.com. Do not include https:// or any trailing slashes or path']
  s_c__Email_Logo_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Enable_Quotations__c boolean [not null, note: 'This enables or disables Request Quotations feature workflow for products with Hide Price enabled. Also, make sure you enable the Quotation Requested Transactional Email under the Store Related List to send email when quotation is created.']
  s_c__External_Javascripts__c textarea 
  s_c__Footer_Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, note: 'The content block displayed as the stores footer']
  s_c__Footer_Menu_Id__c integer [ref: > StoreConnect.s_c__Menu__c.Id, note: 'The menu object displayed as the stores footer']
  s_c__Head_Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, note: 'The specified content block will be inserted as is just before the closing HEAD tag on every page on the website.']
  s_c__Header_Content_Block_Id__c integer [ref: > StoreConnect.s_c__Content_Block__c.Id, note: 'The content block displayed as the stores header']
  s_c__Header_Menu_Id__c integer [ref: > StoreConnect.s_c__Menu__c.Id, note: 'The menu object displayed as the stores header']
  s_c__Home_Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, note: 'The page displayed as the stores home page']
  s_c__Invitation_Email_Template__c string [note: 'Enter the API name for the email template to be sent when inviting a Contact']
  s_c__Link__c url [note: 'The full link your store such as https://example.com/path']
  s_c__Locale__c s_c__Store__c.s_c__Locale__c_picklist [note: 'The locale for this Store']
  s_c__Logo_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Mail_From_Address__c email 
  s_c__Meta_Description__c textarea [note: 'The content that appears within the meta description tag in the HEAD tag of the page']
  s_c__Meta_Keywords__c string [note: 'Comma separated list of keywords to appear within the meta keywords tag in the HEAD tag of the page']
  s_c__Meta_Title__c string [note: 'The content that appears within the meta title tag in the HEAD tag of the page']
  s_c__POS_Order_Types__c string [note: 'A list of Order types that can be created for this Store on POS devices, separated by semicolons']
  s_c__Path__c string [note: 'The path of the store in URLs when it the current store, e.g. https://example.com/eu.']
  s_c__Pay_By_Account_Enabled__c boolean [not null, note: 'Enables or disables the "Pay by Account" payment option for this store.']
  s_c__Points_Earned_With_Points_Ratio__c percent [note: 'Defines the ratio to apply to any points earned when the purchase was made with points. A ratio of 100 means all points are earned, whereas a ratio of 0 means no points are earned']
  s_c__Points_Expiry_Length__c double [note: 'Number of Points Expiry Units that will be used to calculate the default expiry date on Points. Leave blank for no expiry']
  s_c__Points_Expiry_Unit__c s_c__Store__c.s_c__Points_Expiry_Unit__c_picklist [note: 'The unit of measure for the Points_Expiry_Length__c for the Points expiry date. Leave blank for no expiry.']
  s_c__Pricebook_Id__c integer [ref: > Standard.Pricebook2.Id]
  s_c__Privacy_Banner_Markdown__c textarea [note: 'Information about Privacy Compliance to be shown on the web stores privacy information banner.   Use Markdown or HTML to format your text. Find out more at   https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Privacy_Compliance_Enabled__c boolean [not null, note: 'When checked, this enables the privacy compliance features on the web store, eg for GDPR or SCA. It will show a banner that lets the website visitor accept or manage the cookies']
  s_c__Privacy_Settings_Markdown__c textarea [note: 'Information about Privacy Compliance to be shown on the web stores privacy settings screen.   Use Markdown or HTML to format your text. Find out more at   https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Product_Label_Downloads__c string [note: 'This is the name of the Downloads section on your product page']
  s_c__Product_Label_Features__c string [note: 'This is the name of the Features section on your product page']
  s_c__Product_Label_Specifications__c string [note: 'This is the name of the Specifications section on your product page']
  s_c__Product_Label_Support__c string [note: 'This is the name of the Support section on your product page']
  s_c__Product_Label_Warranty__c string [note: 'This is the name of the Warranty section on your product page']
  s_c__Product_Placeholder_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id]
  s_c__Reset_Password_Email_Template__c string [note: 'For order transactional email settings, go to Related Lists - Transactional Emails']
  s_c__Shipping_Enabled__c boolean [not null, note: 'Enables or disables shipping for this store.']
  s_c__Social_Image_Id__c integer [ref: > StoreConnect.s_c__Media__c.Id, note: 'The Image to show when the Product is shared on Social Media. If not provided, will use the Store Logo']
  s_c__Store_Group_Id__c integer [ref: > StoreConnect.s_c__Store_Group__c.Id, note: 'The Group that this Store belongs to']
  s_c__Tax_Inclusive__c boolean [not null, note: 'Tick this checkbox if your product price are tax inclusive. Otherwise,         untick this checkbox so that tax is added over the product price when         order is being created.']
  s_c__Tax_Provider_Id__c integer [ref: > StoreConnect.s_c__Tax_Provider__c.Id, note: 'Defines the Tax Provider that applies to this store']
  s_c__Terms_Page_Id__c integer [ref: > StoreConnect.s_c__Page__c.Id, note: 'If specified, these terms and conditions will be shown during checkout and required to be accepted by the customer before entering their payment information.']
  s_c__Test_Mode__c boolean [not null, note: 'When enabled, ALL orders on the store will be treated as a test order.']
  s_c__Theme_Id__c integer [ref: > StoreConnect.s_c__Theme__c.Id]
  s_c__Theme__c s_c__Store__c.s_c__Theme__c_picklist [not null]
  s_c__Unique_Domain_Path__c string [unique]
  s_c__Voucher_Expiry_Length__c double [note: 'Number of Voucher Expiry Units that will be used to calculate the default expiry date on Vouchers. Leave blank for no expiry']
  s_c__Voucher_Expiry_Unit__c s_c__Store__c.s_c__Voucher_Expiry_Unit__c_picklist [note: 'The unit of measure for the Voucher_Expiry_Length__c for the Voucher expiry date. Leave blank for no expiry.']
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, note: 'The zone that this store is available for, for example to service a particular geographic region.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Preview_Store__c string [note: 'Link to website page for this Store so you can see what it looks like with the current Store configuration']
}


Enum s_c__Style_Block__c.s_c__Media__c_picklist {
    "all"
    "print"
    "screen"
}

Table StoreConnect.s_c__Style_Block__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Active__c boolean [not null, note: 'Defines whether the Style Block is active. Only active Style Blocks will be included on the website']
  s_c__Content__c textarea [note: 'The CSS code of the Style Block, without any <style> tags']
  s_c__Global__c boolean [not null, note: 'Defines whether the Style Block is automatically included on the website. If checked, this style will automatically be included.']
  s_c__Media__c s_c__Style_Block__c.s_c__Media__c_picklist [note: 'Specifies what media/device the CSS style is optimized for']
  s_c__Position__c double [note: 'This defines the display order of the Style Blocks on the website. Lower numbers appear first. Only applies when Global is checked']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The Store that the Style Block belongs to']
  s_c__Url__c url [note: 'The complete URL of an external Stylesheet to be included. If a value is specified, any value in Content will be ignored. Example: https://example.com/stylesheet.css']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Subscription__c.s_c__Billing_Delay_Unit__c_picklist {
    "day"
    "month"
}
Enum s_c__Subscription__c.s_c__Period_Type__c_picklist {
    "day"
    "week"
    "month"
    "year"
}
Enum s_c__Subscription__c.s_c__Type__c_picklist {
    "evergreen"
    "fixed"
}

Table StoreConnect.s_c__Subscription__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Balloon_Price__c currency [note: 'Any additional price added to the final payment']
  s_c__Billing_Delay_Length__c double [note: 'Number of Billing Delay Units after the Renewal Date to delay before charging the subscription']
  s_c__Billing_Delay_Unit__c s_c__Subscription__c.s_c__Billing_Delay_Unit__c_picklist [note: 'The unit of measure for the Billing Delay Length']
  s_c__Cancelled_Date__c datetime [note: 'Date the Subscription was cancelled']
  s_c__Charge_Payments__c boolean [not null, note: 'StoreConnect should process the subscription and attempt to collect payments if there is a Payment Token. When disabled, you can manually process and receive payments']
  s_c__Contact_Id__c integer [ref: > Standard.Contact.Id, not null, note: 'The Contact who ordered this Subscription']
  s_c__Delinquent_Date__c datetime [note: 'Date of first payment failure for the current term']
  s_c__Delinquent_Reason__c textarea [note: 'Most recent error message when attempting to charge payment']
  s_c__End_Date__c datetime [note: 'The date the subscription is scheduled to end']
  s_c__Full_Price__c currency [note: 'The total value over the full term of the subscription']
  s_c__Next_Billing_Date__c datetime [note: 'The next date the payment will be charged. This is updated whenever a payment is taken successfully based on the Next Renewal Date plus any Billing Delay. If the subscription is delinquent this may be a past date']
  s_c__Next_Renewal_Date__c datetime [note: 'Contains next date the Subscription renews. It is updated each time the subscription is processed based on the Term Length and Term Unit']
  s_c__Order_Id__c integer [ref: > Standard.Order.Id, not null, note: 'The original Order that created this Subscription']
  s_c__Payment_Provider_Id__c integer [ref: > StoreConnect.s_c__Payment_Provider__c.Id, note: 'Payment Provider to use for charging recurring payments. Changing this value may prevent payments being charged']
  s_c__Payment_Source_Expires_At__c date [note: 'The date the Payment source (e.g. Credit Card) expires']
  s_c__Payment_Source_Identifier__c string [note: 'The obscured identifier for the source of Payments (e.g. last 4 digits of Credit Card)']
  s_c__Payment_Token__c string [note: 'Authorisation Token used by the Payment Provider for charging payment. DO NOT EDIT']
  s_c__Period_Count__c double [note: 'This is the number of periods for the duration of the subscription. For a 12 month fixed-term subscription where Period_Type is "month", Period Count would be 12. For an evergreen subscription it will be 1']
  s_c__Period_Length__c double [note: 'Number of Term Units between each payment, e.g. 7 with a Term Unit of Days would be weekly']
  s_c__Period_Price__c currency [not null, note: 'Price charged for next subscription payment']
  s_c__Period_Type__c s_c__Subscription__c.s_c__Period_Type__c_picklist [note: 'Unit of of the Term Length, e.g. a monthly payment plan']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The product the customer has subscribed to']
  s_c__Setup_Price__c currency [note: 'Any additional price added to the first payment']
  s_c__Start_Date__c datetime [not null, note: 'Activation date']
  s_c__Suspended_Date__c date [note: 'Date the Subscription was suspended']
  s_c__Type__c s_c__Subscription__c.s_c__Type__c_picklist [note: 'Type__c defines what type of Subscription this is, either an Evergreen or Fixed-Term']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
  s_c__Skip_Processing__c boolean [not null, note: 'Controls whether processing of the Subscription will be skipped for each billing interval cycle']
}



Table StoreConnect.s_c__Sync_Summary__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Captured_At__c datetime 
  s_c__Latest_Row_Synced_At__c datetime [note: 'Timestamp of the latest object synced for this object type']
  s_c__Object_Name__c string 
  s_c__SC_Row_Count__c double 
  s_c__SF_Row_Count__c double 
  s_c__Unique_Sync_Summary_Key__c string [unique, note: 'Do not change this value.']
}


Enum s_c__Tag__c.s_c__Type__c_picklist {
    "New"
    "Exclusive"
    "Sale"
}

Table StoreConnect.s_c__Tag__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'Select the Store that this Tag belongs to']
  s_c__Type__c s_c__Tag__c.s_c__Type__c_picklist [note: 'Pick the tag type']
  s_c__Value__c textarea [note: 'The text to show for this tag']
}



Table StoreConnect.s_c__Tax_Group__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Tax_Provider_Log__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Tax_Provider_Id__c integer [ref: > StoreConnect.s_c__Tax_Provider__c.Id, not null, note: 'Defines the Tax Provider that applies to the log']
  s_c__Received_At__c datetime [note: 'The date/time the response was received from the tax provider']
  s_c__Request__c textarea [note: 'Request sent to the Tax Provider']
  s_c__Requested_At__c datetime [note: 'The date/time the request was sent to the tax provider']
  s_c__Response__c textarea [note: 'Response returned by the Tax Provider']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore']
}


Enum s_c__Tax_Provider__c.s_c__Provider__c_picklist {
    "Avalara"
}

Table StoreConnect.s_c__Tax_Provider__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Active__c boolean [not null, note: 'Enable/disable tax calculation for this tax provider service']
  s_c__Api_Key__c string [note: 'The API key for the Tax providers API']
  s_c__Api_Mode__c string [note: 'The mode of the Tax providers API to use, e.g. "test", "live", etc']
  s_c__Api_Secret__c string [note: 'The API secret key for the Tax providers API']
  s_c__Block_Transactions_Markdown__c textarea [note: 'Displays a message when transactions are blocked for this tax provider. Use Markdown to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown']
  s_c__Block_Transactions_When_Offline__c boolean [not null, note: 'When set to true, prevents transactions from completing when the third party service is unavailable.']
  s_c__Company_Code__c string [note: 'Defines company code for this tax provider']
  s_c__Configuration_Options__c textarea [note: 'Additional Options required for your Tax Provider per the help documentation']
  s_c__Default_Freight_Tax_Code__c string [note: 'Default tax code to be applied to shipping line items']
  s_c__Provider__c s_c__Tax_Provider__c.s_c__Provider__c_picklist [note: 'Tax provider, e.g. Avalara etc']
  s_c__Ship_From_Address_Line_1__c string [note: 'Defines the Line 1 component of this tax providerss Ship From Address. This field in conjunction with the other address elements is used as a fallback address if a Stock Location Address is not found']
  s_c__Ship_From_Address_Line_2__c string [note: 'Defines the Line 2 component of this tax providerss Ship From Address. This field in conjunction with the other address elements is used as a fallback address if a Stock Location Address is not found']
  s_c__Ship_From_City__c string [note: 'Defines the City component of this tax providerss Ship From Address. This field in conjunction with the other address elements is used as a fallback address if a Stock Location Address is not found']
  s_c__Ship_From_Country__c string [note: 'Defines the Country component of this tax providers Ship From Address. This field in conjunction with the other address elements is used as a fallback address if a Stock Location Address is not found']
  s_c__Ship_From_State__c string [note: 'Defines the State component of this tax providers Ship From Address. This field in conjunction with the other address elements is used as a fallback address if a Stock Location Address is not found']
  s_c__Ship_From_Zip_Postal_Code__c string [note: 'Defines the Zip/Postal Code component of this tax providers Ship From Address. This field in conjunction with the other address elements is used as a fallback address if a Stock Location Address is not found']
}



Table StoreConnect.s_c__Tax_Tax_Group__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Tax_Group_Id__c integer [ref: > StoreConnect.s_c__Tax_Group__c.Id, not null, note: 'Select a Tax Group to link with the Tax']
  s_c__Tax_Id__c integer [ref: > StoreConnect.s_c__Tax__c.Id, not null, note: 'Select a Tax to link with the Tax Group']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Tax__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Based_On_Ship_Address__c boolean [not null, note: 'If selected then Tax region is selected based on shipping address of the order,         otherwise, it would be based on billing address of the order']
  s_c__Display_Name__c string [note: 'This field is used as display name for the Tax in the app,         if the value of this field is empty then the value of `Name`         field will be used as the tax name.']
  s_c__Effective_From__c date [note: 'Effective start date for this Tax']
  s_c__Effective_To__c date [note: 'Effective end date for this Tax']
  s_c__Rate_Percentage__c double [note: 'Enter the Tax Rate in percentage. Eg: if the tax rate is `10%`         then the value should be `10`']
  s_c__Rate__c double 
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'Choose a Zone for the Tax']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Taxonomy__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Position__c double [note: 'Lowers numbers are show first, otherwise sorted alphabetically by Name']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Theme_Asset__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Theme_Id__c integer [ref: > StoreConnect.s_c__Theme__c.Id, not null]
  s_c__Key__c string [not null, note: 'Specify a unique value that represents the Asset.']
  s_c__Unique_Theme_Key__c string [unique, note: 'Do not change this value.']
  s_c__Url__c url [note: 'The fully qualified url of the asset. Must be available on the internet.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}


Enum s_c__Theme_Locale__c.s_c__Code__c_picklist {
    "en"
    "zh_CN"
    "zh_TW"
    "da"
    "nl"
    "fi"
    "fr"
    "de"
    "it"
    "ja"
    "ko"
    "no"
    "pt_BR"
    "ru"
    "es"
    "es_MX"
    "sv"
    "th"
}

Table StoreConnect.s_c__Theme_Locale__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Theme_Id__c integer [ref: > StoreConnect.s_c__Theme__c.Id, not null]
  s_c__Active__c boolean [not null, note: 'Check this if the Theme Locale is ready to be used.']
  s_c__Code__c s_c__Theme_Locale__c.s_c__Code__c_picklist [not null, note: 'Pick the Locale for this Theme Locale.']
  s_c__Default__c boolean [not null, note: 'Check this if the Theme Locale is the default.']
  s_c__Unique_Theme_Code__c string [unique, note: 'Do not change this value.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}



Table StoreConnect.s_c__Theme_Template__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Theme_Id__c integer [ref: > StoreConnect.s_c__Theme__c.Id, not null]
  s_c__Content__c textarea [note: 'HTML and Liquid code content for this template.']
  s_c__Key__c string [not null, note: 'Specify a unique value that represents the Template.']
  s_c__Unique_Theme_Key__c string [unique, note: 'Do not change this value.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}



Table StoreConnect.s_c__Theme_Variable__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Theme_Id__c integer [ref: > StoreConnect.s_c__Theme__c.Id, not null, note: 'The associated Theme for this Theme Variable.']
  s_c__Key__c string [not null, note: 'The unique key for accessing this Theme Variable.']
  s_c__Unique_Theme_Variable_Key__c string [unique, note: 'Do not change this value.']
  s_c__Value__c string [note: 'The Value for this Theme Variable.']
}



Table StoreConnect.s_c__Theme__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Imported__c boolean [not null, note: 'Indicates whether the Theme was imported.']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
  s_c__Preview_theme__c string 
}



Table StoreConnect.s_c__Trait_Category__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Display_As_Filter_Top_Level__c boolean [not null, note: 'If true, display each related trait type as a top-level filter in product search, with trait values as options. If false, display trait category as a top-level filter in product search, with trait types as options.']
  s_c__Display_Name__c string [not null]
  s_c__Position__c double 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Trait_Type__c.s_c__Unit__c_picklist {
    "millimetre"
    "centimetre"
    "metre"
    "kilometre"
    "gram"
    "kilogram"
    "metric ton"
    "millilitre"
    "litre"
    "inch"
    "foot"
    "yard"
    "mile"
    "ounce"
    "pound"
    "short ton"
    "teaspoon"
    "tablespoon"
    "cup"
    "fluid ounce"
    "quart"
    "gallon"
    "millisecond"
    "second"
    "hour"
    "day"
    "week"
    "month"
    "year"
    "kilojoules"
    "calories"
    "colour"
    "rgb code"
    "hsv code"
}
Enum s_c__Trait_Type__c.s_c__Value_Type__c_picklist {
    "Text"
    "Number"
    "Decimal"
    "Currency"
    "Percent"
    "Checkbox"
    "Date"
    "Email"
    "URL"
    "Long Text Area Markdown"
}

Table StoreConnect.s_c__Trait_Type__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Display_As_Filter__c boolean [not null]
  s_c__Display_Name__c string [not null]
  s_c__Display_On_Product_Page__c boolean [not null]
  s_c__Position__c double 
  s_c__Trait_Category_Id__c integer [ref: > StoreConnect.s_c__Trait_Category__c.Id, not null]
  s_c__Unit__c s_c__Trait_Type__c.s_c__Unit__c_picklist [note: 'The unit of this Trait Type to aid in display on the website']
  s_c__Value_Type__c s_c__Trait_Type__c.s_c__Value_Type__c_picklist [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Trait_Value__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Checkbox__c boolean [not null]
  s_c__Currency__c currency 
  s_c__Date__c date 
  s_c__Decimal__c double 
  s_c__Display_Name__c string [not null]
  s_c__Email__c email 
  s_c__Long_Text_Area_Markdown__c textarea [note: 'Use Markdown or HTML to format your text. Find out more at     https://help.getstoreconnect.com/documentation/how-to-use-markdown.']
  s_c__Number__c double 
  s_c__Percent__c percent 
  s_c__Text__c string 
  s_c__Trait_Type_Id__c integer [ref: > StoreConnect.s_c__Trait_Type__c.Id, not null]
  s_c__URL__c url 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Trait__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__Description__c textarea 
  s_c__Display_Name__c string [not null]
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id]
  s_c__Trait_Category_Id__c integer [ref: > StoreConnect.s_c__Trait_Category__c.Id, not null]
  s_c__Trait_Type_Id__c integer [ref: > StoreConnect.s_c__Trait_Type__c.Id, not null]
  s_c__Trait_Value_Id__c integer [ref: > StoreConnect.s_c__Trait_Value__c.Id, not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Transactional_Email__c.s_c__Checkout_Step__c_picklist {
    "open"
    "customer"
    "shipping"
    "payment"
    "complete"
    "failed"
    "quotation_requested"
    "pos-complete"
}

Table StoreConnect.s_c__Transactional_Email__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Cart_Abandoned__c boolean [not null, note: 'Only send the email if the cart is abandoned']
  s_c__Checkout_Step__c s_c__Transactional_Email__c.s_c__Checkout_Step__c_picklist [note: 'The value the orders Checkout Step must be for the email to send']
  s_c__Classic_Email_Template_API_Name__c string [not null, note: 'The API name of the Classic Email Template to be used when sending this email. Your Salesforce Administrator can supply you with this if needed']
  s_c__Enabled__c boolean [not null, note: 'Send this email when these conditions are met']
  s_c__Order_Status__c string [note: 'The value the orders Status must be for the email to send']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null]
}



Table StoreConnect.s_c__Voucher_Payment__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Voucher_Id__c integer [ref: > StoreConnect.s_c__Voucher__c.Id, not null, note: 'The Voucher that this Voucher Payment belongs to']
  s_c__Payment_Id__c integer [ref: > StoreConnect.s_c__Payment__c.Id, not null, note: 'The Payment that this Voucher Payment belongs to']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__Voucher__c.s_c__Usage__c_picklist {
    "store"
    "store_group"
    "any_store"
}

Table StoreConnect.s_c__Voucher__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Code__c string [unique, note: 'The unique code for this Voucher that can be entered during checkout']
  s_c__Expires_At__c datetime [note: 'Specify the exact time after which this Voucher will no longer be able to be used']
  s_c__Opening_Balance__c currency [not null, note: 'Specify the initial value of this Voucher']
  s_c__Order_Item_Id__c integer [ref: > Standard.OrderItem.Id, note: 'The Order Item that this Voucher was purchased with']
  s_c__Product_Id__c integer [ref: > Standard.Product2.Id, note: 'The Product that defines what type of Voucher this is']
  s_c__Recipient_Id__c integer [ref: > Standard.Contact.Id, note: 'The Contact to send this Voucher to']
  s_c__Resend_Email__c boolean [not null, note: 'When checked, this will send the Voucher email to the Recipient_Id__c']
  s_c__Store_Id__c integer [ref: > StoreConnect.s_c__Store__c.Id, not null, note: 'The Store that this Voucher belongs to']
  s_c__Usage__c s_c__Voucher__c.s_c__Usage__c_picklist [not null, note: 'Indicates whether the Voucher can be used on other Stores']
}



Table StoreConnect.s_c__Zone_City__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'Defines the Zone that applies to the City']
  s_c__City_Id__c integer [ref: > StoreConnect.s_c__City__c.Id, not null, note: 'Defines the City that applies to the Zone']
}



Table StoreConnect.s_c__Zone_Country__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'Select a Zone to link with the Country']
  s_c__Country_Id__c integer [ref: > StoreConnect.s_c__Country__c.Id, not null, note: 'Select a Country to link with Zone']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Zone_Postcode__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'Select a Zone to link with the Postcode']
  s_c__Postcode_Id__c integer [ref: > StoreConnect.s_c__Postcode__c.Id, not null, note: 'Select a Postcode to link with Zone']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Zone_State__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  Name string [not null]
  s_c__State_Id__c integer [ref: > StoreConnect.s_c__State__c.Id, not null, note: 'Select a State to link with Zone']
  s_c__Zone_Id__c integer [ref: > StoreConnect.s_c__Zone__c.Id, not null, note: 'Select a Zone to link with the State']
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}



Table StoreConnect.s_c__Zone__c {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key     connection used within your webstore.']
}


Enum s_c__storeConnect_Setting__mdt.Language_picklist {
    "en_US"
    "de"
    "es"
    "fr"
    "it"
    "ja"
    "sv"
    "ko"
    "zh_TW"
    "zh_CN"
    "pt_BR"
    "nl_NL"
    "da"
    "th"
    "fi"
    "ru"
    "es_MX"
    "no"
}

Table StoreConnect.s_c__storeConnect_Setting__mdt {
  Note {
'''
  StoreConnect Object
'''
  }

  Id id [not null]
  DeveloperName string [not null]
  MasterLabel string [not null]
  Language s_c__storeConnect_Setting__mdt.Language_picklist [not null]
  s_c__Setting__c string 
  s_c__sC_Id__c string [unique, note: 'Do not modify this External ID from within Salesforce, it is the foreign key connection used within your webstore.']
}